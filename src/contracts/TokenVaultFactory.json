{
  "contractName": "TokenVaultFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultLookup",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getVaultsByUser",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllVaults",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "vaultExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maturity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yield",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "contractCreator",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        }
      ],
      "name": "destroyVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yield\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractCreator\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"}],\"name\":\"destroyVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVaultsByUser\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"vaultExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vaultLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor, provide Admin role to contract deployer Requirements:\"},\"createVault(address,uint256,uint256,address)\":{\"details\":\"Create a new vault and store it in the registry Requirements: No existing vaults for that user\"},\"destroyVault(address)\":{\"details\":\"Remove vault from registry,  Requirements: must be and admin and vault must exist\"},\"getAllVaults()\":{\"details\":\"Get a list of all the vaults Requirements:\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getVaultsByUser(address)\":{\"details\":\"Given a wallet address, what are the associated vaults Requirements:\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"vaultExists(address,address)\":{\"details\":\"Check if the user address already has a vault with the same token TODO: check for expired vaults Requirements:\"}},\"title\":\"TokenVaultFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TokenVaultFactory.sol\":\"TokenVaultFactory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x183481af1c40d2efb26b86f63d6fe9e22f24c87e436d60a69f261b38500e7cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f562746c399ae045994a88b2218d1238a349de07afbfb305aab0c7fdbc2954cc\",\"dweb:/ipfs/QmYoFrDD2c6fi9CpPz1bjCMAyketjZ3G7ByUSVQMntysms\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xfe0edb09653ed10e8a1bfe03eb9b0ff06775666eee817a95bd3d0799f1ee2b44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbb9d503857eab98f87465df0f02fef03083f30c1dbec82f319f41aaadae19b4\",\"dweb:/ipfs/QmTxDshRAMtoeM45YrTzQZdpmy4mt4scCNHjfZiWSvdETF\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/TokenVault.sol\":{\"keccak256\":\"0x44e7d51b4dd3fea23229ffe35fcfbfee807d95871d69b4a7da246949a655657d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68dff9d1d57200194d85875f13dacaf3b1edbc304410c0d6774b08148c545b3f\",\"dweb:/ipfs/QmPJzdFxmvSeMbvvTUtDSLUCFKSD6QmWZxQvqDYed8obuL\"]},\"project:/contracts/TokenVaultFactory.sol\":{\"keccak256\":\"0x2479aab8544013f3a4b895c7b12db60495239e39a458d4988bb0b9106cee2358\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ee17e6a8f170b01eec6f26fe3560d80c059aac5d7b78298ec8db4f6fe1a0147\",\"dweb:/ipfs/QmSeZzbTM8HaNAtAzYc2ATWtWDVjVcCyuvvfJKTveQfvJa\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200002860003364010000000062000079810204565b60038054600160a060020a0319163390811790915562000073907fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec429064010000000062000092810204565b620006ec565b6200008e8282640100000000620000e7810204565b5050565b620000a68264010000000062000183810204565b620000cd81620000be64010000000062000198810204565b6401000000006200019c810204565b620000e28383640100000000620000e7810204565b505050565b620000fc828264010000000062000253810204565b6200008e57600082815260208181526040808320600160a060020a03851684529091529020805460ff191660011790556200013f64010000000062000198810204565b600160a060020a031681600160a060020a0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60009081526020819052604090206001015490565b3390565b620001b1828264010000000062000253810204565b6200008e57620001da600160a060020a038216601464010000000062000ebc6200027c82021704565b620001f583602064010000000062000ebc6200027c82021704565b6040516020016200020892919062000544565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526200024a91600401620005c9565b60405180910390fd5b600091825260208281526040808420600160a060020a0393909316845291905290205460ff1690565b606060006200028d8360026200064e565b6200029a90600262000633565b67ffffffffffffffff811115620002da577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801562000305576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811062000364577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110620003d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a9053506000620003fd8460026200064e565b6200040a90600162000633565b90505b600181111562000501577f303132333435363738396162636465660000000000000000000000000000000085600f166010811062000474577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a7f010000000000000000000000000000000000000000000000000000000000000002828281518110620004d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a905350601090940493620004f981620006a3565b90506200040d565b5083156200053d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200024a90620005fe565b9392505050565b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516200057e81601785016020880162000670565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351620005bd81602884016020880162000670565b01602801949350505050565b6000602082528251806020840152620005ea81604085016020870162000670565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b60008219821115620006495762000649620006bd565b500190565b60008160001904831182151516156200066b576200066b620006bd565b500290565b60005b838110156200068d57818101518382015260200162000673565b838111156200069d576000848401525b50505050565b600081620006b557620006b5620006bd565b506000190190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b614ae280620006fc6000396000f3fe60806040523480156200001157600080fd5b50600436106200011d576000357c01000000000000000000000000000000000000000000000000000000009004806391d1485411620000b6578063a07213e9116200008c578063a07213e91462000235578063a217fddf146200024c578063d547741f1462000256578063fab2343f146200026d576200011d565b806391d1485414620001df57806397331bf914620001f65780639fa19215146200020f576200011d565b80632d1ed26a11620000f85780632d1ed26a14620001815780632d5fd62e14620001985780632f2ff15d14620001b157806336568abe14620001c8576200011d565b806301ffc9a71462000122578063248a9ca314620001515780632a0acc6a1462000177575b600080fd5b620001396200013336600462001536565b62000284565b604051620001489190620016d8565b60405180910390f35b6200016862000162366004620014f6565b620002e3565b604051620001489190620016e3565b62000168620002f8565b62000139620001923660046200143d565b6200031c565b620001af620001a9366004620014a8565b620004c2565b005b620001af620001c23660046200150f565b620005d5565b620001af620001d93660046200150f565b62000606565b62000139620001f03660046200150f565b62000690565b62000200620006c6565b6040516200014891906200167c565b62000226620002203660046200147a565b62000737565b6040516200014891906200161c565b62000200620002463660046200141e565b6200077d565b620001686200080f565b620001af620002673660046200150f565b62000814565b620001af6200027e3660046200141e565b6200083a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b000000000000000000000000000000000000000000000000000000001480620002dd5750620002dd82620011cc565b92915050565b60009081526020819052604090206001015490565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6000805b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902054811015620004b85773ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120805483908110620003ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602080832090910154604080517fb9f890de000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169450849263b9f890de92600480840193829003018186803b1580156200042157600080fd5b505afa15801562000436573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200045c919062001578565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620004a05760019350505050620002dd565b50508080620004af906200188e565b91505062000320565b5060009392505050565b620004ce84336200031c565b15620004d957600080fd5b339050600084848484600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620005139062001410565b620005239594939291906200163d565b604051809103906000f08015801562000540573d6000803e3d6000fd5b5033600090815260016020818152604083208054808401825590845290832001805473ffffffffffffffffffffffffffffffffffffffff90941673ffffffffffffffffffffffffffffffffffffffff1994851681179091556002805492830181559092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180549092161790555050505050565b620005e082620002e3565b620005f581620005ef62001216565b6200121a565b620006018383620012b0565b505050565b6200061062001216565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000677906200178d565b60405180910390fd5b6200068c828262001361565b5050565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b606060028054806020026020016040519081016040528092919081815260200182805480156200072d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000701575b5050505050905090565b600160205281600052604060002081815481106200075457600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160209081526040918290208054835181840281018401909452808452606093928301828280156200080357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620007d7575b50505050509050919050565b600081565b6200081f82620002e3565b6200082e81620005ef62001216565b62000601838362001361565b33620008677fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec428262000690565b620008a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006779062001756565b620008ac82336200031c565b1515600114620008bb57600080fd5b600080805b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604090205481101562000a535773ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604081208054839081106200094d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602080832090910154604080517fb9f890de000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169450849263b9f890de92600480840193829003018186803b158015620009c157600080fd5b505afa158015620009d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009fc919062001578565b90508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000a3b57829450600193505b5050808062000a4a906200188e565b915050620008c0565b506001811515141562000bf85773ffffffffffffffffffffffffffffffffffffffff831660009081526001602081905260409091208054909162000a979162001827565b8154811062000acf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff86811684526001909252604090922080549190921691908490811062000b41577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff948516179055918516815260019091526040902080548062000bc8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555b50600080805b60025481101562000d4c5760006002828154811062000c46577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602080832090910154604080517fb9f890de000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169450849263b9f890de92600480840193829003018186803b15801562000cba57600080fd5b505afa15801562000ccf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cf5919062001578565b90508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000d3457829350600194505b5050808062000d43906200188e565b91505062000bfe565b506001821515141562000eb5576002805462000d6b9060019062001827565b8154811062000da3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546002805473ffffffffffffffffffffffffffffffffffffffff909216918590811062000e04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600280548062000e85577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555b5050505050565b6060600062000ecd83600262001805565b62000eda906002620017ea565b67ffffffffffffffff81111562000f1a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801562000f45576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811062000fa4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106200102f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006200106d84600262001805565b6200107a906001620017ea565b90505b600181111562001189577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110620010e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a7f01000000000000000000000000000000000000000000000000000000000000000282828151811062001141577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601090940493620011818162001874565b90506200107d565b508315620011c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006779062001721565b9392505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3390565b62001226828262000690565b6200068c576200124e8173ffffffffffffffffffffffffffffffffffffffff16601462000ebc565b6200125b83602062000ebc565b6040516020016200126e92919062001597565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526200067791600401620016ec565b620012bc828262000690565b6200068c5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091529020805460ff191660011790556200130362001216565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6200136d828262000690565b156200068c5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091529020805460ff19169055620013b262001216565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6131ab806200190283390190565b60006020828403121562001430578081fd5b8135620011c581620018db565b6000806040838503121562001450578081fd5b82356200145d81620018db565b915060208301356200146f81620018db565b809150509250929050565b600080604083850312156200148d578182fd5b82356200149a81620018db565b946020939093013593505050565b60008060008060808587031215620014be578182fd5b8435620014cb81620018db565b935060208501359250604085013591506060850135620014eb81620018db565b939692955090935050565b60006020828403121562001508578081fd5b5035919050565b6000806040838503121562001522578182fd5b8235915060208301356200146f81620018db565b60006020828403121562001548578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114620011c5578182fd5b6000602082840312156200158a578081fd5b8151620011c581620018db565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351620015d181601785016020880162001841565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516200161081602884016020880162001841565b01602801949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff95861681526020810194909452604084019290925283166060830152909116608082015260a00190565b6020808252825182820181905260009190848201906040850190845b81811015620016cc57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010162001698565b50909695505050505050565b901515815260200190565b90815260200190565b60006020825282518060208401526200170d81604085016020870162001841565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252600b908201527f4e6f7420612061646d696e000000000000000000000000000000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b60008219821115620018005762001800620018ac565b500190565b6000816000190483118215151615620018225762001822620018ac565b500290565b6000828210156200183c576200183c620018ac565b500390565b60005b838110156200185e57818101518382015260200162001844565b838111156200186e576000848401525b50505050565b600081620018865762001886620018ac565b506000190190565b6000600019821415620018a557620018a5620018ac565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114620018fe57600080fd5b5056fe60806040523480156200001157600080fd5b50604051620031ab380380620031ab8339810160408190526200003491620005fd565b600784905542600655600883905560018054600160a060020a03808816600160a060020a0319928316179092556002805492851692909116919091179055600a805460ff19169055620000a06000805160206200318b8339815191528264010000000062000117810204565b620000c46000805160206200316b8339815191528264010000000062000117810204565b620000e86000805160206200318b8339815191523364010000000062000117810204565b6200010c6000805160206200316b8339815191523364010000000062000130810204565b505050505062000802565b6200012c828264010000000062000185810204565b5050565b620001448264010000000062000221810204565b6200016b816200015c64010000000062000239810204565b6401000000006200023d810204565b62000180838364010000000062000185810204565b505050565b6200019a8282640100000000620002f4810204565b6200012c57600082815260208181526040808320600160a060020a03851684529091529020805460ff19166001179055620001dd64010000000062000239810204565b600160a060020a031681600160a060020a0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000818152602081905260409020600101545b919050565b3390565b620002528282640100000000620002f4810204565b6200012c576200027b600160a060020a038216601464010000000062001c4c6200031d82021704565b6200029683602064010000000062001c4c6200031d82021704565b604051602001620002a99291906200065a565b60408051601f19818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252620002eb91600401620006df565b60405180910390fd5b600091825260208281526040808420600160a060020a0393909316845291905290205460ff1690565b606060006200032e83600262000764565b6200033b90600262000749565b67ffffffffffffffff8111156200037b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015620003a6576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811062000405577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811062000478577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a90535060006200049e84600262000764565b620004ab90600162000749565b90505b6001811115620005a2577f303132333435363738396162636465660000000000000000000000000000000085600f166010811062000515577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a7f01000000000000000000000000000000000000000000000000000000000000000282828151811062000572577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a9053506010909404936200059a81620007b9565b9050620004ae565b508315620005de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002eb9062000714565b9392505050565b8051600160a060020a03811681146200023457600080fd5b600080600080600060a0868803121562000615578081fd5b6200062086620005e5565b945060208601519350604086015192506200063e60608701620005e5565b91506200064e60808701620005e5565b90509295509295909350565b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516200069481601785016020880162000786565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351620006d381602884016020880162000786565b01602801949350505050565b60006020825282518060208401526200070081604085016020870162000786565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b600082198211156200075f576200075f620007d3565b500190565b6000816000190483118215151615620007815762000781620007d3565b500290565b60005b83811015620007a357818101518382015260200162000789565b83811115620007b3576000848401525b50505050565b600081620007cb57620007cb620007d3565b506000190190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61295980620008126000396000f3fe608060405234801561001057600080fd5b50600436106101ec576000357c0100000000000000000000000000000000000000000000000000000000900480637a40624b11610121578063a7775ab5116100bf578063d547741f1161008e578063d547741f1461039d578063e0fc2f05146103b0578063e2195904146103b8578063fdda77bd146103cd576101ec565b8063a7775ab514610367578063adcd63281461037a578063b6b55f2514610382578063b9f890de14610395576101ec565b80638dbde182116100fb5780638dbde1821461032657806391d1485414610339578063a14e4d691461034c578063a217fddf1461035f576101ec565b80637a40624b14610303578063880dc4e61461030b57806388685ab514610313576101ec565b80632e1a7d4d1161018e5780635217af4c116101685780635217af4c146102c257806355a373d6146102d55780636b215c04146102dd578063782aafac146102f0576101ec565b80632e1a7d4d146102875780632f2ff15d1461029c57806336568abe146102af576101ec565b8063204f83f9116101ca578063204f83f91461024f578063248a9ca31461026457806328593984146102775780632a0acc6a1461027f576101ec565b806301ffc9a7146101f15780630d4552dd1461021a5780631f52692b1461023a575b600080fd5b6102046101ff36600461239c565b6103e0565b60405161021191906125e9565b60405180910390f35b61022d6102283660046121f3565b61043e565b60405161021191906125fd565b610242610632565b6040516102119190612517565b61025761064e565b60405161021191906125f4565b610257610272366004612362565b610654565b610257610669565b61025761066f565b61029a610295366004612362565b610693565b005b61029a6102aa36600461237a565b6108ce565b61029a6102bd36600461237a565b6108f7565b61029a6102d036600461232a565b610971565b6102426109e4565b61029a6102eb3660046121f3565b610a00565b61029a6102fe366004612225565b610fc6565b6102576112f6565b6102046112fc565b6102576103213660046121d9565b611305565b61029a61033436600461224e565b611317565b61020461034736600461237a565b61161f565b61025761035a3660046121d9565b611655565b610257611710565b61029a6103753660046121d9565b611715565b6102576117d2565b61029a610390366004612362565b6117d8565b6102426119be565b61029a6103ab36600461237a565b6119da565b6102576119f9565b6103c0611a1d565b604051610211919061258f565b6102576103db3660046121f3565b611a8c565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b000000000000000000000000000000000000000000000000000000001480610436575061043682611eed565b90505b919050565b606060005b6003548110156105f55760006003828154811061047757600080516020612904833981519152600052603260045260246000fd5b6000918252602091829020604080516080810182526004909302909101805473ffffffffffffffffffffffffffffffffffffffff9081168452600182015416938301939093526002830154908201526003820180549192916060840191906104de9061285b565b80601f016020809104026020016040519081016040528092919081815260200182805461050a9061285b565b80156105575780601f1061052c57610100808354040283529160200191610557565b820191906000526020600020905b81548152906001019060200180831161053a57829003601f168201915b50505050508152505090508373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161480156105d057508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16145b156105e25760600151915061062c9050565b50806105ed8161289d565b915050610443565b505060408051808201909152600981527f6e6f207265636f7264000000000000000000000000000000000000000000000060208201525b92915050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60009081526020819052604090206001015490565b60085481565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b600a5460ff1615156001146106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d4906126d3565b60405180910390fd5b6107077f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb863361161f565b61073d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061269c565b6001546040517f095ea7b3000000000000000000000000000000000000000000000000000000008152339173ffffffffffffffffffffffffffffffffffffffff169063095ea7b3906107959084908690600401612569565b602060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e79190612346565b506001546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906108409084908690600401612569565b602060405180830381600087803b15801561085a57600080fd5b505af115801561086e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108929190612346565b507ff67611512e0a2d90c96fd3f08dca4971bc45fba9dc679eabe839a32abbe58a8e816040516108c29190612517565b60405180910390a15050565b6108d782610654565b6108e8816108e3611f37565b611f3b565b6108f28383611fc6565b505050565b6108ff611f37565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610963576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612778565b61096d8282612072565b5050565b61099b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec423361161f565b6109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061270a565b600a805460ff1916911515919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b6007544211610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612741565b336000805b600354811015610c23578373ffffffffffffffffffffffffffffffffffffffff1660038281548110610a8957600080516020612904833981519152600052603260045260246000fd5b600091825260209091206001600490920201015473ffffffffffffffffffffffffffffffffffffffff16148015610b2357508473ffffffffffffffffffffffffffffffffffffffff1660038281548110610afa57600080516020612904833981519152600052603260045260246000fd5b600091825260209091206004909102015473ffffffffffffffffffffffffffffffffffffffff16145b15610c115760408051808201909152600481527f7061696400000000000000000000000000000000000000000000000000000000602090910152600380547f5ab53550295bfc9315c562232d99e75119ebb4d3b8a6e012160126a3506b02a8919083908110610ba957600080516020612904833981519152600052603260045260246000fd5b9060005260206000209060040201600301604051610bc791906123f4565b604051809103902014610c115760038181548110610bfc57600080516020612904833981519152600052603260045260246000fd5b90600052602060002090600402016002015491505b80610c1b8161289d565b915050610a40565b5060005b600b54811015610e3d576000600b8281548110610c5b57600080516020612904833981519152600052603260045260246000fd5b6000918252602082200154600b805473ffffffffffffffffffffffffffffffffffffffff90921693509084908110610caa57600080516020612904833981519152600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff90811691508716811415610e28576040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063095ea7b390610d2d9088908890600401612569565b602060405180830381600087803b158015610d4757600080fd5b505af1158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f9190612346565b506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90610dd49088908890600401612569565b602060405180830381600087803b158015610dee57600080fd5b505af1158015610e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e269190612346565b505b50508080610e359061289d565b915050610c27565b5060005b600354811015610fbf578373ffffffffffffffffffffffffffffffffffffffff1660038281548110610e8a57600080516020612904833981519152600052603260045260246000fd5b600091825260209091206001600490920201015473ffffffffffffffffffffffffffffffffffffffff16148015610f2457508473ffffffffffffffffffffffffffffffffffffffff1660038281548110610efb57600080516020612904833981519152600052603260045260246000fd5b600091825260209091206004909102015473ffffffffffffffffffffffffffffffffffffffff16145b15610fad576040518060400160405280600481526020017f706169640000000000000000000000000000000000000000000000000000000081525060038281548110610f8757600080516020612904833981519152600052603260045260246000fd5b90600052602060002090600402016003019080519060200190610fab92919061211c565b505b80610fb78161289d565b915050610e41565b5050505050565b610ff07f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb863361161f565b611026576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061269c565b3360005b600b5481101561119b576000600b828154811061105e57600080516020612904833981519152600052603260045260246000fd5b6000918252602082200154600b805473ffffffffffffffffffffffffffffffffffffffff909216935090849081106110ad57600080516020612904833981519152600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff90811691508616811415611186576040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906323b872dd9061113290879030908a90600401612538565b602060405180830381600087803b15801561114c57600080fd5b505af1158015611160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111849190612346565b505b505080806111939061289d565b91505061102a565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906370a08231906111f1903090600401612517565b60206040518083038186803b15801561120957600080fd5b505afa15801561121d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124191906123dc565b6040805180820190915273ffffffffffffffffffffffffffffffffffffffff9586168152602081019182526004805460018101825560009190915290517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6002909202918201805473ffffffffffffffffffffffffffffffffffffffff19169190971617909555517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90940193909355505050565b60065481565b600a5460ff1681565b60056020526000908152604090205481565b6113417f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb863361161f565b611377576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061269c565b60075442116113b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612741565b60005b83518110156116195760008482815181106113e757600080516020612904833981519152600052603260045260246000fd5b6020026020010151905060005b600b54811015611604576000600b828154811061142857600080516020612904833981519152600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff908116915086168114156115f15760006040518060800160405280600b858154811061148c57600080516020612904833981519152600052603260045260246000fd5b60009182526020808320919091015473ffffffffffffffffffffffffffffffffffffffff90811684528881168483015260408085018c905280518082018252600781527f70656e64696e67000000000000000000000000000000000000000000000000008185015260609586015260038054600181018255945285517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6004909502948501805473ffffffffffffffffffffffffffffffffffffffff19908116928516929092178155878501517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8701805490931694169390931790558501517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d84015592840151805194955085946115ec937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e0192919091019061211c565b505050505b50806115fc8161289d565b9150506113f4565b505080806116119061289d565b9150506113b5565b50505050565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b600080805b6004548110156117095760006004828154811061168e57600080516020612904833981519152600052603260045260246000fd5b600091825260209182902060408051808201909152600290920201805473ffffffffffffffffffffffffffffffffffffffff908116808452600190920154938301939093529092509086161480156116e95750828160200151115b156116f657806020015192505b50806117018161289d565b91505061165a565b5092915050565b600081565b60025473ffffffffffffffffffffffffffffffffffffffff163314611766576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612665565b600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60095481565b6118027f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb863361161f565b611838576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061269c565b6001546040517f23b872dd000000000000000000000000000000000000000000000000000000008152339173ffffffffffffffffffffffffffffffffffffffff16906323b872dd9061189290849030908790600401612538565b602060405180830381600087803b1580156118ac57600080fd5b505af11580156118c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e49190612346565b506001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a082319061193b903090600401612517565b60206040518083038186803b15801561195357600080fd5b505afa158015611967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198b91906123dc565b6009556040517f8ce0bd46ec50cf39f0d0ea8686a686eb226af5796dcda4231b26fb84b5ef1234906108c2908390612517565b60015473ffffffffffffffffffffffffffffffffffffffff1690565b6119e382610654565b6119ef816108e3611f37565b6108f28383612072565b7f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb8681565b6060600b805480602002602001604051908101604052809291908181526020018280548015611a8257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611a57575b5050505050905090565b6000805b600354811015611c4257600060038281548110611ac457600080516020612904833981519152600052603260045260246000fd5b6000918252602091829020604080516080810182526004909302909101805473ffffffffffffffffffffffffffffffffffffffff908116845260018201541693830193909352600283015490820152600382018054919291606084019190611b2b9061285b565b80601f0160208091040260200160405190810160405280929190818152602001828054611b579061285b565b8015611ba45780601f10611b7957610100808354040283529160200191611ba4565b820191906000526020600020905b815481529060010190602001808311611b8757829003601f168201915b50505050508152505090508373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16148015611c1d57508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16145b15611c2f5760400151915061062c9050565b5080611c3a8161289d565b915050611a90565b5060009392505050565b60606000611c5b8360026127f9565b611c669060026127e1565b67ffffffffffffffff811115611c9357600080516020612904833981519152600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611cbd576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611d0957600080516020612904833981519152600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611d8157600080516020612904833981519152600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000611dbd8460026127f9565b611dc89060016127e1565b90505b6001811115611ead577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611e1e57600080516020612904833981519152600052603260045260246000fd5b1a7f010000000000000000000000000000000000000000000000000000000000000002828281518110611e6857600080516020612904833981519152600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601090940493611ea681612844565b9050611dcb565b508315611ee6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612630565b9392505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3390565b611f45828261161f565b61096d57611f6a8173ffffffffffffffffffffffffffffffffffffffff166014611c4c565b611f75836020611c4c565b604051602001611f86929190612496565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526106d4916004016125fd565b611fd0828261161f565b61096d5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091529020805460ff19166001179055612014611f37565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61207c828261161f565b1561096d5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091529020805460ff191690556120be611f37565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b8280546121289061285b565b90600052602060002090601f01602090048101928261214a5760008555612190565b82601f1061216357805160ff1916838001178555612190565b82800160010185558215612190579182015b82811115612190578251825591602001919060010190612175565b5061219c9291506121a0565b5090565b5b8082111561219c57600081556001016121a1565b803573ffffffffffffffffffffffffffffffffffffffff8116811461043957600080fd5b6000602082840312156121ea578081fd5b611ee6826121b5565b60008060408385031215612205578081fd5b61220e836121b5565b915061221c602084016121b5565b90509250929050565b60008060408385031215612237578182fd5b612240836121b5565b946020939093013593505050565b600080600060608486031215612262578081fd5b833567ffffffffffffffff80821115612279578283fd5b818601915086601f83011261228c578283fd5b81356020828211156122a0576122a06128d5565b808202604051828282010181811086821117156122bf576122bf6128d5565b604052838152828101945085830182870184018c10156122dd578788fd5b8796505b84871015612306576122f2816121b5565b8652600196909601959483019483016122e1565b50975061231690508882016121b5565b955050505050604084013590509250925092565b60006020828403121561233b578081fd5b8135611ee6816128f2565b600060208284031215612357578081fd5b8151611ee6816128f2565b600060208284031215612373578081fd5b5035919050565b6000806040838503121561238c578182fd5b8235915061221c602084016121b5565b6000602082840312156123ad578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611ee6578182fd5b6000602082840312156123ed578081fd5b5051919050565b815460009081906002810460018083168061241057607f831692505b60208084108214156124375760008051602061290483398151915287526022600452602487fd5b81801561244b576001811461245c57612488565b60ff19861689528489019650612488565b6124658a6127d5565b885b868110156124805781548b820152908501908301612467565b505084890196505b509498975050505050505050565b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516124ce816017850160208801612818565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161250b816028840160208801612818565b01602801949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156125dd57835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016125ab565b50909695505050505050565b901515815260200190565b90815260200190565b600060208252825180602084015261261c816040850160208701612818565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252600c908201527f4e6f7420616e204f776e65720000000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f742061206f70657261746f72000000000000000000000000000000000000604082015260600190565b60208082526014908201527f5769746864726177206e6f7420656e61626c6564000000000000000000000000604082015260600190565b6020808252600b908201527f4e6f7420612061646d696e000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f4e6f74206174206d617475726974790000000000000000000000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b60009081526020902090565b600082198211156127f4576127f46128b8565b500190565b6000816000190483118215151615612813576128136128b8565b500290565b60005b8381101561283357818101518382015260200161281b565b838111156116195750506000910152565b600081612853576128536128b8565b506000190190565b60028104600182168061286f57607f821691505b6020821081141561289757600080516020612904833981519152600052602260045260246000fd5b50919050565b60006000198214156128b1576128b16128b8565b5060010190565b600080516020612904833981519152600052601160045260246000fd5b600080516020612904833981519152600052604160045260246000fd5b801515811461290057600080fd5b5056fe4e487b7100000000000000000000000000000000000000000000000000000000a264697066735822122094665a03dc8b01e97b73c00cf82c4eb0ed5b1da6a0338dec1d92782940e81e9c64736f6c63430008000033df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4276d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb86a26469706673582212208e07201d16ccea12c79c1521e225d916c75a623a650a20ef1a3fddc4d840407d64736f6c63430008000033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200011d576000357c01000000000000000000000000000000000000000000000000000000009004806391d1485411620000b6578063a07213e9116200008c578063a07213e91462000235578063a217fddf146200024c578063d547741f1462000256578063fab2343f146200026d576200011d565b806391d1485414620001df57806397331bf914620001f65780639fa19215146200020f576200011d565b80632d1ed26a11620000f85780632d1ed26a14620001815780632d5fd62e14620001985780632f2ff15d14620001b157806336568abe14620001c8576200011d565b806301ffc9a71462000122578063248a9ca314620001515780632a0acc6a1462000177575b600080fd5b620001396200013336600462001536565b62000284565b604051620001489190620016d8565b60405180910390f35b6200016862000162366004620014f6565b620002e3565b604051620001489190620016e3565b62000168620002f8565b62000139620001923660046200143d565b6200031c565b620001af620001a9366004620014a8565b620004c2565b005b620001af620001c23660046200150f565b620005d5565b620001af620001d93660046200150f565b62000606565b62000139620001f03660046200150f565b62000690565b62000200620006c6565b6040516200014891906200167c565b62000226620002203660046200147a565b62000737565b6040516200014891906200161c565b62000200620002463660046200141e565b6200077d565b620001686200080f565b620001af620002673660046200150f565b62000814565b620001af6200027e3660046200141e565b6200083a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b000000000000000000000000000000000000000000000000000000001480620002dd5750620002dd82620011cc565b92915050565b60009081526020819052604090206001015490565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6000805b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902054811015620004b85773ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120805483908110620003ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602080832090910154604080517fb9f890de000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169450849263b9f890de92600480840193829003018186803b1580156200042157600080fd5b505afa15801562000436573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200045c919062001578565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620004a05760019350505050620002dd565b50508080620004af906200188e565b91505062000320565b5060009392505050565b620004ce84336200031c565b15620004d957600080fd5b339050600084848484600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620005139062001410565b620005239594939291906200163d565b604051809103906000f08015801562000540573d6000803e3d6000fd5b5033600090815260016020818152604083208054808401825590845290832001805473ffffffffffffffffffffffffffffffffffffffff90941673ffffffffffffffffffffffffffffffffffffffff1994851681179091556002805492830181559092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180549092161790555050505050565b620005e082620002e3565b620005f581620005ef62001216565b6200121a565b620006018383620012b0565b505050565b6200061062001216565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000677906200178d565b60405180910390fd5b6200068c828262001361565b5050565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b606060028054806020026020016040519081016040528092919081815260200182805480156200072d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831162000701575b5050505050905090565b600160205281600052604060002081815481106200075457600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160209081526040918290208054835181840281018401909452808452606093928301828280156200080357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620007d7575b50505050509050919050565b600081565b6200081f82620002e3565b6200082e81620005ef62001216565b62000601838362001361565b33620008677fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec428262000690565b620008a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006779062001756565b620008ac82336200031c565b1515600114620008bb57600080fd5b600080805b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604090205481101562000a535773ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604081208054839081106200094d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602080832090910154604080517fb9f890de000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169450849263b9f890de92600480840193829003018186803b158015620009c157600080fd5b505afa158015620009d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009fc919062001578565b90508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000a3b57829450600193505b5050808062000a4a906200188e565b915050620008c0565b506001811515141562000bf85773ffffffffffffffffffffffffffffffffffffffff831660009081526001602081905260409091208054909162000a979162001827565b8154811062000acf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff86811684526001909252604090922080549190921691908490811062000b41577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff948516179055918516815260019091526040902080548062000bc8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555b50600080805b60025481101562000d4c5760006002828154811062000c46577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602080832090910154604080517fb9f890de000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169450849263b9f890de92600480840193829003018186803b15801562000cba57600080fd5b505afa15801562000ccf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cf5919062001578565b90508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000d3457829350600194505b5050808062000d43906200188e565b91505062000bfe565b506001821515141562000eb5576002805462000d6b9060019062001827565b8154811062000da3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546002805473ffffffffffffffffffffffffffffffffffffffff909216918590811062000e04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600280548062000e85577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555b5050505050565b6060600062000ecd83600262001805565b62000eda906002620017ea565b67ffffffffffffffff81111562000f1a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801562000f45576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811062000fa4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106200102f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006200106d84600262001805565b6200107a906001620017ea565b90505b600181111562001189577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110620010e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a7f01000000000000000000000000000000000000000000000000000000000000000282828151811062001141577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601090940493620011818162001874565b90506200107d565b508315620011c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006779062001721565b9392505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3390565b62001226828262000690565b6200068c576200124e8173ffffffffffffffffffffffffffffffffffffffff16601462000ebc565b6200125b83602062000ebc565b6040516020016200126e92919062001597565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526200067791600401620016ec565b620012bc828262000690565b6200068c5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091529020805460ff191660011790556200130362001216565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6200136d828262000690565b156200068c5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091529020805460ff19169055620013b262001216565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6131ab806200190283390190565b60006020828403121562001430578081fd5b8135620011c581620018db565b6000806040838503121562001450578081fd5b82356200145d81620018db565b915060208301356200146f81620018db565b809150509250929050565b600080604083850312156200148d578182fd5b82356200149a81620018db565b946020939093013593505050565b60008060008060808587031215620014be578182fd5b8435620014cb81620018db565b935060208501359250604085013591506060850135620014eb81620018db565b939692955090935050565b60006020828403121562001508578081fd5b5035919050565b6000806040838503121562001522578182fd5b8235915060208301356200146f81620018db565b60006020828403121562001548578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114620011c5578182fd5b6000602082840312156200158a578081fd5b8151620011c581620018db565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351620015d181601785016020880162001841565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516200161081602884016020880162001841565b01602801949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff95861681526020810194909452604084019290925283166060830152909116608082015260a00190565b6020808252825182820181905260009190848201906040850190845b81811015620016cc57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010162001698565b50909695505050505050565b901515815260200190565b90815260200190565b60006020825282518060208401526200170d81604085016020870162001841565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252600b908201527f4e6f7420612061646d696e000000000000000000000000000000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b60008219821115620018005762001800620018ac565b500190565b6000816000190483118215151615620018225762001822620018ac565b500290565b6000828210156200183c576200183c620018ac565b500390565b60005b838110156200185e57818101518382015260200162001844565b838111156200186e576000848401525b50505050565b600081620018865762001886620018ac565b506000190190565b6000600019821415620018a557620018a5620018ac565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114620018fe57600080fd5b5056fe60806040523480156200001157600080fd5b50604051620031ab380380620031ab8339810160408190526200003491620005fd565b600784905542600655600883905560018054600160a060020a03808816600160a060020a0319928316179092556002805492851692909116919091179055600a805460ff19169055620000a06000805160206200318b8339815191528264010000000062000117810204565b620000c46000805160206200316b8339815191528264010000000062000117810204565b620000e86000805160206200318b8339815191523364010000000062000117810204565b6200010c6000805160206200316b8339815191523364010000000062000130810204565b505050505062000802565b6200012c828264010000000062000185810204565b5050565b620001448264010000000062000221810204565b6200016b816200015c64010000000062000239810204565b6401000000006200023d810204565b62000180838364010000000062000185810204565b505050565b6200019a8282640100000000620002f4810204565b6200012c57600082815260208181526040808320600160a060020a03851684529091529020805460ff19166001179055620001dd64010000000062000239810204565b600160a060020a031681600160a060020a0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000818152602081905260409020600101545b919050565b3390565b620002528282640100000000620002f4810204565b6200012c576200027b600160a060020a038216601464010000000062001c4c6200031d82021704565b6200029683602064010000000062001c4c6200031d82021704565b604051602001620002a99291906200065a565b60408051601f19818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252620002eb91600401620006df565b60405180910390fd5b600091825260208281526040808420600160a060020a0393909316845291905290205460ff1690565b606060006200032e83600262000764565b6200033b90600262000749565b67ffffffffffffffff8111156200037b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015620003a6576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811062000405577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811062000478577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a90535060006200049e84600262000764565b620004ab90600162000749565b90505b6001811115620005a2577f303132333435363738396162636465660000000000000000000000000000000085600f166010811062000515577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a7f01000000000000000000000000000000000000000000000000000000000000000282828151811062000572577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010190600160f860020a031916908160001a9053506010909404936200059a81620007b9565b9050620004ae565b508315620005de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002eb9062000714565b9392505050565b8051600160a060020a03811681146200023457600080fd5b600080600080600060a0868803121562000615578081fd5b6200062086620005e5565b945060208601519350604086015192506200063e60608701620005e5565b91506200064e60808701620005e5565b90509295509295909350565b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516200069481601785016020880162000786565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351620006d381602884016020880162000786565b01602801949350505050565b60006020825282518060208401526200070081604085016020870162000786565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b600082198211156200075f576200075f620007d3565b500190565b6000816000190483118215151615620007815762000781620007d3565b500290565b60005b83811015620007a357818101518382015260200162000789565b83811115620007b3576000848401525b50505050565b600081620007cb57620007cb620007d3565b506000190190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61295980620008126000396000f3fe608060405234801561001057600080fd5b50600436106101ec576000357c0100000000000000000000000000000000000000000000000000000000900480637a40624b11610121578063a7775ab5116100bf578063d547741f1161008e578063d547741f1461039d578063e0fc2f05146103b0578063e2195904146103b8578063fdda77bd146103cd576101ec565b8063a7775ab514610367578063adcd63281461037a578063b6b55f2514610382578063b9f890de14610395576101ec565b80638dbde182116100fb5780638dbde1821461032657806391d1485414610339578063a14e4d691461034c578063a217fddf1461035f576101ec565b80637a40624b14610303578063880dc4e61461030b57806388685ab514610313576101ec565b80632e1a7d4d1161018e5780635217af4c116101685780635217af4c146102c257806355a373d6146102d55780636b215c04146102dd578063782aafac146102f0576101ec565b80632e1a7d4d146102875780632f2ff15d1461029c57806336568abe146102af576101ec565b8063204f83f9116101ca578063204f83f91461024f578063248a9ca31461026457806328593984146102775780632a0acc6a1461027f576101ec565b806301ffc9a7146101f15780630d4552dd1461021a5780631f52692b1461023a575b600080fd5b6102046101ff36600461239c565b6103e0565b60405161021191906125e9565b60405180910390f35b61022d6102283660046121f3565b61043e565b60405161021191906125fd565b610242610632565b6040516102119190612517565b61025761064e565b60405161021191906125f4565b610257610272366004612362565b610654565b610257610669565b61025761066f565b61029a610295366004612362565b610693565b005b61029a6102aa36600461237a565b6108ce565b61029a6102bd36600461237a565b6108f7565b61029a6102d036600461232a565b610971565b6102426109e4565b61029a6102eb3660046121f3565b610a00565b61029a6102fe366004612225565b610fc6565b6102576112f6565b6102046112fc565b6102576103213660046121d9565b611305565b61029a61033436600461224e565b611317565b61020461034736600461237a565b61161f565b61025761035a3660046121d9565b611655565b610257611710565b61029a6103753660046121d9565b611715565b6102576117d2565b61029a610390366004612362565b6117d8565b6102426119be565b61029a6103ab36600461237a565b6119da565b6102576119f9565b6103c0611a1d565b604051610211919061258f565b6102576103db3660046121f3565b611a8c565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b000000000000000000000000000000000000000000000000000000001480610436575061043682611eed565b90505b919050565b606060005b6003548110156105f55760006003828154811061047757600080516020612904833981519152600052603260045260246000fd5b6000918252602091829020604080516080810182526004909302909101805473ffffffffffffffffffffffffffffffffffffffff9081168452600182015416938301939093526002830154908201526003820180549192916060840191906104de9061285b565b80601f016020809104026020016040519081016040528092919081815260200182805461050a9061285b565b80156105575780601f1061052c57610100808354040283529160200191610557565b820191906000526020600020905b81548152906001019060200180831161053a57829003601f168201915b50505050508152505090508373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161480156105d057508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16145b156105e25760600151915061062c9050565b50806105ed8161289d565b915050610443565b505060408051808201909152600981527f6e6f207265636f7264000000000000000000000000000000000000000000000060208201525b92915050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60009081526020819052604090206001015490565b60085481565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b600a5460ff1615156001146106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d4906126d3565b60405180910390fd5b6107077f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb863361161f565b61073d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061269c565b6001546040517f095ea7b3000000000000000000000000000000000000000000000000000000008152339173ffffffffffffffffffffffffffffffffffffffff169063095ea7b3906107959084908690600401612569565b602060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e79190612346565b506001546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906108409084908690600401612569565b602060405180830381600087803b15801561085a57600080fd5b505af115801561086e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108929190612346565b507ff67611512e0a2d90c96fd3f08dca4971bc45fba9dc679eabe839a32abbe58a8e816040516108c29190612517565b60405180910390a15050565b6108d782610654565b6108e8816108e3611f37565b611f3b565b6108f28383611fc6565b505050565b6108ff611f37565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610963576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612778565b61096d8282612072565b5050565b61099b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec423361161f565b6109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061270a565b600a805460ff1916911515919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b6007544211610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612741565b336000805b600354811015610c23578373ffffffffffffffffffffffffffffffffffffffff1660038281548110610a8957600080516020612904833981519152600052603260045260246000fd5b600091825260209091206001600490920201015473ffffffffffffffffffffffffffffffffffffffff16148015610b2357508473ffffffffffffffffffffffffffffffffffffffff1660038281548110610afa57600080516020612904833981519152600052603260045260246000fd5b600091825260209091206004909102015473ffffffffffffffffffffffffffffffffffffffff16145b15610c115760408051808201909152600481527f7061696400000000000000000000000000000000000000000000000000000000602090910152600380547f5ab53550295bfc9315c562232d99e75119ebb4d3b8a6e012160126a3506b02a8919083908110610ba957600080516020612904833981519152600052603260045260246000fd5b9060005260206000209060040201600301604051610bc791906123f4565b604051809103902014610c115760038181548110610bfc57600080516020612904833981519152600052603260045260246000fd5b90600052602060002090600402016002015491505b80610c1b8161289d565b915050610a40565b5060005b600b54811015610e3d576000600b8281548110610c5b57600080516020612904833981519152600052603260045260246000fd5b6000918252602082200154600b805473ffffffffffffffffffffffffffffffffffffffff90921693509084908110610caa57600080516020612904833981519152600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff90811691508716811415610e28576040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063095ea7b390610d2d9088908890600401612569565b602060405180830381600087803b158015610d4757600080fd5b505af1158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f9190612346565b506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90610dd49088908890600401612569565b602060405180830381600087803b158015610dee57600080fd5b505af1158015610e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e269190612346565b505b50508080610e359061289d565b915050610c27565b5060005b600354811015610fbf578373ffffffffffffffffffffffffffffffffffffffff1660038281548110610e8a57600080516020612904833981519152600052603260045260246000fd5b600091825260209091206001600490920201015473ffffffffffffffffffffffffffffffffffffffff16148015610f2457508473ffffffffffffffffffffffffffffffffffffffff1660038281548110610efb57600080516020612904833981519152600052603260045260246000fd5b600091825260209091206004909102015473ffffffffffffffffffffffffffffffffffffffff16145b15610fad576040518060400160405280600481526020017f706169640000000000000000000000000000000000000000000000000000000081525060038281548110610f8757600080516020612904833981519152600052603260045260246000fd5b90600052602060002090600402016003019080519060200190610fab92919061211c565b505b80610fb78161289d565b915050610e41565b5050505050565b610ff07f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb863361161f565b611026576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061269c565b3360005b600b5481101561119b576000600b828154811061105e57600080516020612904833981519152600052603260045260246000fd5b6000918252602082200154600b805473ffffffffffffffffffffffffffffffffffffffff909216935090849081106110ad57600080516020612904833981519152600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff90811691508616811415611186576040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906323b872dd9061113290879030908a90600401612538565b602060405180830381600087803b15801561114c57600080fd5b505af1158015611160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111849190612346565b505b505080806111939061289d565b91505061102a565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906370a08231906111f1903090600401612517565b60206040518083038186803b15801561120957600080fd5b505afa15801561121d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124191906123dc565b6040805180820190915273ffffffffffffffffffffffffffffffffffffffff9586168152602081019182526004805460018101825560009190915290517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6002909202918201805473ffffffffffffffffffffffffffffffffffffffff19169190971617909555517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90940193909355505050565b60065481565b600a5460ff1681565b60056020526000908152604090205481565b6113417f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb863361161f565b611377576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061269c565b60075442116113b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612741565b60005b83518110156116195760008482815181106113e757600080516020612904833981519152600052603260045260246000fd5b6020026020010151905060005b600b54811015611604576000600b828154811061142857600080516020612904833981519152600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff908116915086168114156115f15760006040518060800160405280600b858154811061148c57600080516020612904833981519152600052603260045260246000fd5b60009182526020808320919091015473ffffffffffffffffffffffffffffffffffffffff90811684528881168483015260408085018c905280518082018252600781527f70656e64696e67000000000000000000000000000000000000000000000000008185015260609586015260038054600181018255945285517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6004909502948501805473ffffffffffffffffffffffffffffffffffffffff19908116928516929092178155878501517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8701805490931694169390931790558501517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d84015592840151805194955085946115ec937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e0192919091019061211c565b505050505b50806115fc8161289d565b9150506113f4565b505080806116119061289d565b9150506113b5565b50505050565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b600080805b6004548110156117095760006004828154811061168e57600080516020612904833981519152600052603260045260246000fd5b600091825260209182902060408051808201909152600290920201805473ffffffffffffffffffffffffffffffffffffffff908116808452600190920154938301939093529092509086161480156116e95750828160200151115b156116f657806020015192505b50806117018161289d565b91505061165a565b5092915050565b600081565b60025473ffffffffffffffffffffffffffffffffffffffff163314611766576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612665565b600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60095481565b6118027f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb863361161f565b611838576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d49061269c565b6001546040517f23b872dd000000000000000000000000000000000000000000000000000000008152339173ffffffffffffffffffffffffffffffffffffffff16906323b872dd9061189290849030908790600401612538565b602060405180830381600087803b1580156118ac57600080fd5b505af11580156118c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e49190612346565b506001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906370a082319061193b903090600401612517565b60206040518083038186803b15801561195357600080fd5b505afa158015611967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198b91906123dc565b6009556040517f8ce0bd46ec50cf39f0d0ea8686a686eb226af5796dcda4231b26fb84b5ef1234906108c2908390612517565b60015473ffffffffffffffffffffffffffffffffffffffff1690565b6119e382610654565b6119ef816108e3611f37565b6108f28383612072565b7f76d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb8681565b6060600b805480602002602001604051908101604052809291908181526020018280548015611a8257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611a57575b5050505050905090565b6000805b600354811015611c4257600060038281548110611ac457600080516020612904833981519152600052603260045260246000fd5b6000918252602091829020604080516080810182526004909302909101805473ffffffffffffffffffffffffffffffffffffffff908116845260018201541693830193909352600283015490820152600382018054919291606084019190611b2b9061285b565b80601f0160208091040260200160405190810160405280929190818152602001828054611b579061285b565b8015611ba45780601f10611b7957610100808354040283529160200191611ba4565b820191906000526020600020905b815481529060010190602001808311611b8757829003601f168201915b50505050508152505090508373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16148015611c1d57508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16145b15611c2f5760400151915061062c9050565b5080611c3a8161289d565b915050611a90565b5060009392505050565b60606000611c5b8360026127f9565b611c669060026127e1565b67ffffffffffffffff811115611c9357600080516020612904833981519152600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611cbd576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611d0957600080516020612904833981519152600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611d8157600080516020612904833981519152600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000611dbd8460026127f9565b611dc89060016127e1565b90505b6001811115611ead577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611e1e57600080516020612904833981519152600052603260045260246000fd5b1a7f010000000000000000000000000000000000000000000000000000000000000002828281518110611e6857600080516020612904833981519152600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601090940493611ea681612844565b9050611dcb565b508315611ee6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612630565b9392505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3390565b611f45828261161f565b61096d57611f6a8173ffffffffffffffffffffffffffffffffffffffff166014611c4c565b611f75836020611c4c565b604051602001611f86929190612496565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526106d4916004016125fd565b611fd0828261161f565b61096d5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091529020805460ff19166001179055612014611f37565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61207c828261161f565b1561096d5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091529020805460ff191690556120be611f37565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b8280546121289061285b565b90600052602060002090601f01602090048101928261214a5760008555612190565b82601f1061216357805160ff1916838001178555612190565b82800160010185558215612190579182015b82811115612190578251825591602001919060010190612175565b5061219c9291506121a0565b5090565b5b8082111561219c57600081556001016121a1565b803573ffffffffffffffffffffffffffffffffffffffff8116811461043957600080fd5b6000602082840312156121ea578081fd5b611ee6826121b5565b60008060408385031215612205578081fd5b61220e836121b5565b915061221c602084016121b5565b90509250929050565b60008060408385031215612237578182fd5b612240836121b5565b946020939093013593505050565b600080600060608486031215612262578081fd5b833567ffffffffffffffff80821115612279578283fd5b818601915086601f83011261228c578283fd5b81356020828211156122a0576122a06128d5565b808202604051828282010181811086821117156122bf576122bf6128d5565b604052838152828101945085830182870184018c10156122dd578788fd5b8796505b84871015612306576122f2816121b5565b8652600196909601959483019483016122e1565b50975061231690508882016121b5565b955050505050604084013590509250925092565b60006020828403121561233b578081fd5b8135611ee6816128f2565b600060208284031215612357578081fd5b8151611ee6816128f2565b600060208284031215612373578081fd5b5035919050565b6000806040838503121561238c578182fd5b8235915061221c602084016121b5565b6000602082840312156123ad578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611ee6578182fd5b6000602082840312156123ed578081fd5b5051919050565b815460009081906002810460018083168061241057607f831692505b60208084108214156124375760008051602061290483398151915287526022600452602487fd5b81801561244b576001811461245c57612488565b60ff19861689528489019650612488565b6124658a6127d5565b885b868110156124805781548b820152908501908301612467565b505084890196505b509498975050505050505050565b60007f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000825283516124ce816017850160208801612818565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161250b816028840160208801612818565b01602801949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156125dd57835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016125ab565b50909695505050505050565b901515815260200190565b90815260200190565b600060208252825180602084015261261c816040850160208701612818565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252600c908201527f4e6f7420616e204f776e65720000000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f742061206f70657261746f72000000000000000000000000000000000000604082015260600190565b60208082526014908201527f5769746864726177206e6f7420656e61626c6564000000000000000000000000604082015260600190565b6020808252600b908201527f4e6f7420612061646d696e000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f4e6f74206174206d617475726974790000000000000000000000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b60009081526020902090565b600082198211156127f4576127f46128b8565b500190565b6000816000190483118215151615612813576128136128b8565b500290565b60005b8381101561283357818101518382015260200161281b565b838111156116195750506000910152565b600081612853576128536128b8565b506000190190565b60028104600182168061286f57607f821691505b6020821081141561289757600080516020612904833981519152600052602260045260246000fd5b50919050565b60006000198214156128b1576128b16128b8565b5060010190565b600080516020612904833981519152600052601160045260246000fd5b600080516020612904833981519152600052604160045260246000fd5b801515811461290057600080fd5b5056fe4e487b7100000000000000000000000000000000000000000000000000000000a264697066735822122094665a03dc8b01e97b73c00cf82c4eb0ed5b1da6a0338dec1d92782940e81e9c64736f6c63430008000033df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4276d92ef51f7d7d45b3e891347e649744c224326a0412ae46e6627a7b6b2edb86a26469706673582212208e07201d16ccea12c79c1521e225d916c75a623a650a20ef1a3fddc4d840407d64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2450:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "403:397:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "420:3:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "425:25:16",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "413:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "413:38:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "413:38:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "460:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "480:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "474:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:13:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "464:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "522:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "530:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "518:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "518:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "541:3:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "546:2:16",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "537:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "537:12:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "551:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "496:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "496:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "496:62:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "567:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "581:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "586:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "577:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "577:16:16"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "571:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "613:2:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "617:2:16",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "609:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:11:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "622:19:16",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "602:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "602:40:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "602:40:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "651:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "673:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "667:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:13:16"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "655:8:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "715:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "723:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "711:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "711:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "734:2:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "738:2:16",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "730:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "730:11:16"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "743:8:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "689:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "689:63:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "689:63:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "761:33:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "776:2:16"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "780:8:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "772:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "772:17:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "791:2:16",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "768:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:26:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "761:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "371:3:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "376:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "384:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:16",
                "type": ""
              }
            ],
            "src": "14:786:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "926:262:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "943:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "954:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "936:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "936:21:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "966:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "986:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "980:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:13:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "970:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1013:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1024:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1009:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1009:18:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1029:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1002:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1002:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1002:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1071:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1079:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1067:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:15:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1088:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1099:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1084:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1084:18:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1104:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1045:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1045:66:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1045:66:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1120:62:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1136:9:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1155:6:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1163:2:16",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1151:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1151:15:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1172:2:16",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1168:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1168:7:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:29:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1132:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:45:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1179:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1128:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1120:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "895:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "906:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "917:4:16",
                "type": ""
              }
            ],
            "src": "805:383:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1367:182:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1384:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1395:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1377:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1377:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1377:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1418:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1429:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1414:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1414:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1407:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1407:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1457:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1468:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1453:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1453:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1473:34:16",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1446:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1446:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1446:62:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1517:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1529:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1540:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1525:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1517:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1344:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1358:4:16",
                "type": ""
              }
            ],
            "src": "1193:356:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1602:80:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1629:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1631:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1631:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1631:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1618:1:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1625:1:16"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1621:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1621:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1615:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1615:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1612:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1660:16:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1671:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1674:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1667:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1660:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1585:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1588:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "1594:3:16",
                "type": ""
              }
            ],
            "src": "1554:128:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1739:116:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1798:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1800:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1800:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1800:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "1770:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1763:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1763:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1756:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1756:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1778:1:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1789:1:16",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1785:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1785:6:16"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "1793:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "1781:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1781:14:16"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1775:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1775:21:16"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:45:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1749:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1829:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1844:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1847:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "1840:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1840:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "1829:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1718:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1721:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "1727:7:16",
                "type": ""
              }
            ],
            "src": "1687:168:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1913:205:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1923:10:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1932:1:16",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1927:1:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1992:63:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2017:3:16"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2022:1:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2013:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2013:11:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2036:3:16"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2041:1:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2032:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2032:11:16"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2026:5:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2026:18:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2006:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2006:39:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2006:39:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1953:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1956:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1950:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1950:13:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1964:19:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1966:15:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1975:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1978:2:16",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1971:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1971:10:16"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1966:1:16"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1946:3:16",
                    "statements": []
                  },
                  "src": "1942:113:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2081:31:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2094:3:16"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2099:6:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2090:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2090:16:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2108:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2083:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2083:27:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2083:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2070:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2073:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2067:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2067:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2064:2:16"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1891:3:16",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1896:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1901:6:16",
                "type": ""
              }
            ],
            "src": "1860:258:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2170:89:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2197:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2199:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2199:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2199:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2190:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2183:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2183:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2180:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2228:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2239:5:16"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2250:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2246:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2246:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2235:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2235:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2228:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2152:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2162:3:16",
                "type": ""
              }
            ],
            "src": "2123:136:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2296:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2313:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2316:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2306:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2306:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2306:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2410:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2413:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2403:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2403:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2403:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2434:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2437:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2427:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2427:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2427:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2264:184:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8438:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:16",
                "type": ""
              }
            ],
            "src": "14:259:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "365:315:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "411:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "420:6:16"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "428:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "413:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "413:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "413:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "386:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "395:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "382:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "382:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "407:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "378:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "378:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "375:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "446:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "472:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "459:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "459:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "450:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "518:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "491:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "491:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "533:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "543:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "557:47:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "589:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "600:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "585:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "585:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "572:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "572:32:16"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "561:7:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "640:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "613:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "657:17:16",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "667:7:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "657:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "323:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "334:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "346:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "354:6:16",
                "type": ""
              }
            ],
            "src": "278:402:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "772:240:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "827:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "793:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "802:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "814:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "785:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "782:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "853:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "879:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "866:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "857:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "925:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "898:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "898:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "898:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "940:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "950:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "940:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "964:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "991:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1002:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "987:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "974:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "974:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "964:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:16",
                "type": ""
              }
            ],
            "src": "685:327:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1138:418:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1185:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1194:6:16"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1202:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1187:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1187:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1187:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1159:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1168:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1155:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1155:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1180:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1151:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:33:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1148:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1220:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1246:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1233:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1233:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1224:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1292:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1265:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1265:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1307:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1317:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1307:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1331:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1358:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1369:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1354:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1354:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1341:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1331:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1382:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1409:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1420:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1405:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1405:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1392:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1382:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1433:47:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1465:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1476:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1461:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1461:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1448:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1448:32:16"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1437:7:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1516:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1489:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1489:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1533:17:16",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1543:7:16"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1533:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1080:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1091:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1103:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1111:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1119:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1127:6:16",
                "type": ""
              }
            ],
            "src": "1017:539:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1631:120:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1677:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1686:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1694:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1679:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1679:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1679:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1652:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1661:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1648:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1648:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1673:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1644:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1641:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1712:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1735:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1722:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:23:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1712:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1597:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1608:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1620:6:16",
                "type": ""
              }
            ],
            "src": "1561:190:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1843:240:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1889:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1898:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1906:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1891:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1891:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1891:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1864:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1873:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1860:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1860:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1885:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1856:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1856:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1853:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1924:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1947:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1934:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:23:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1924:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1966:45:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1996:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2007:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1992:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1992:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1979:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1979:32:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1970:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2047:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2020:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2020:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2020:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2062:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2072:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2062:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1801:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1812:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1824:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1832:6:16",
                "type": ""
              }
            ],
            "src": "1756:327:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2157:283:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2203:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2212:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2220:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2205:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2205:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2205:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2178:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2187:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2174:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2199:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2170:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2167:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2238:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2264:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2251:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2251:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2242:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2384:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2393:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2401:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2386:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2386:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2386:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2296:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2307:5:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2314:66:16",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2303:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2303:78:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2293:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2293:89:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2286:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:97:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2283:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2419:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2429:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2419:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2123:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2134:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2146:6:16",
                "type": ""
              }
            ],
            "src": "2088:352:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2539:182:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2585:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2594:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2602:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2587:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2587:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2587:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2560:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2569:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2556:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2556:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2581:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2552:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2552:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2549:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2620:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2639:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2633:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2633:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2624:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2685:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2658:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2658:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2658:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2700:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2710:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2700:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$925_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2505:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2516:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2528:6:16",
                "type": ""
              }
            ],
            "src": "2445:276:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3115:397:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3132:3:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3137:25:16",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3125:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3125:38:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3125:38:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3172:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3192:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3186:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3186:13:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3176:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3234:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3242:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3230:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3230:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3253:3:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3258:2:16",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3249:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3249:12:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3263:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3208:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3208:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3208:62:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3279:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3293:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3298:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3289:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3289:16:16"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3283:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3325:2:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3329:2:16",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3321:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3321:11:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3334:19:16",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3314:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3314:40:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3314:40:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3363:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3385:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3379:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3379:13:16"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "3367:8:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3427:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3435:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3423:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3423:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3446:2:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3450:2:16",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3442:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3442:11:16"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "3455:8:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3401:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3401:63:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3401:63:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3473:33:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3488:2:16"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "3492:8:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3484:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3484:17:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3503:2:16",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3480:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3480:26:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3473:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3083:3:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3088:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3096:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3107:3:16",
                "type": ""
              }
            ],
            "src": "2726:786:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3618:125:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3628:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3640:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3651:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3636:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3636:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3628:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3670:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3685:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3693:42:16",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3681:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3681:55:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3663:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3663:74:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3663:74:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3587:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3598:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3609:4:16",
                "type": ""
              }
            ],
            "src": "3517:226:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3961:338:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3971:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3983:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3994:3:16",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3979:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3979:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3971:4:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4007:52:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4017:42:16",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4011:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4075:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4090:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4098:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4086:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4086:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4068:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4068:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4068:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4122:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4133:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4118:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4118:18:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4138:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4111:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4111:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4111:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4165:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4176:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4161:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4161:18:16"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4181:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4154:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4154:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4154:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4208:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4219:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4204:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4204:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4228:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4236:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4224:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4224:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4197:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4197:43:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4197:43:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4260:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4271:3:16",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4256:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4256:19:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "4281:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4289:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4277:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4277:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4249:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4249:44:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4249:44:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_address__to_t_address_t_uint256_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3898:9:16",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3909:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3917:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3925:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3933:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3941:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3952:4:16",
                "type": ""
              }
            ],
            "src": "3748:551:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4455:533:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4465:12:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4475:2:16",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4469:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4486:32:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4504:9:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4515:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4500:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:18:16"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4490:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4534:9:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4545:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4527:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4527:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4527:21:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4557:17:16",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4568:6:16"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4561:3:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4583:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4603:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4597:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:13:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4587:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4626:6:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4634:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4619:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4619:22:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4619:22:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4650:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4661:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4672:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4657:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4657:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4650:3:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4684:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4702:6:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4710:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4698:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:15:16"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4688:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4722:13:16",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "4731:4:16"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4726:1:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4793:169:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4814:3:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4829:6:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4823:5:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4823:13:16"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4838:42:16",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4819:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4819:62:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4807:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4807:75:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4807:75:16"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4895:19:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4906:3:16"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4911:2:16"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4902:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4902:12:16"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4895:3:16"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4927:25:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4941:6:16"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4949:2:16"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4937:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4937:15:16"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4927:6:16"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4755:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4758:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4752:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4752:13:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4766:18:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4768:14:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4777:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4780:1:16",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4773:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4773:9:16"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4768:1:16"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4748:3:16",
                    "statements": []
                  },
                  "src": "4744:218:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4971:11:16",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4979:3:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4971:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4424:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4435:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4446:4:16",
                "type": ""
              }
            ],
            "src": "4304:684:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5088:92:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5098:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5110:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5121:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5106:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5106:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5098:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5140:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5165:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5158:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5158:14:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5151:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5151:22:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5133:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5133:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5133:41:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5057:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5068:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5079:4:16",
                "type": ""
              }
            ],
            "src": "4993:187:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5286:76:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5296:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5308:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5319:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5304:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5304:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5296:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5338:9:16"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5349:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5331:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5331:25:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5331:25:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5255:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5266:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5277:4:16",
                "type": ""
              }
            ],
            "src": "5185:177:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5488:321:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5505:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5516:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5498:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5498:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5498:21:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5528:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5548:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5542:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5542:13:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5532:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5575:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5586:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5571:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5571:18:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5591:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5564:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5564:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5564:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5633:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5641:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5629:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5629:15:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5650:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5661:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5646:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5646:18:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5666:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5607:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5607:66:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5607:66:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5682:121:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5698:9:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5717:6:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5725:2:16",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5713:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5713:15:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5730:66:16",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5709:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5709:88:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5694:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5694:104:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5800:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5690:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5690:113:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5682:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5457:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5468:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5479:4:16",
                "type": ""
              }
            ],
            "src": "5367:442:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5988:182:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6005:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6016:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5998:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5998:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5998:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6039:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6050:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6035:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6035:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6055:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6028:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6028:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6078:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6089:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6074:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6074:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6094:34:16",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6067:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6067:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6067:62:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6138:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6150:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6161:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6146:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6146:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6138:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5965:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5979:4:16",
                "type": ""
              }
            ],
            "src": "5814:356:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6349:161:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6366:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6377:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6359:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6359:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6359:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6400:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6411:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6396:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6396:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6416:2:16",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6389:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6389:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6389:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6439:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6450:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6435:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6435:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6455:13:16",
                        "type": "",
                        "value": "Not a admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6428:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6428:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6428:41:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6478:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6490:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6501:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6486:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6478:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_da305ab119e44f345961db91c223a80ea959d57a8a57e55a8a580dde4b0130f0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6326:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6340:4:16",
                "type": ""
              }
            ],
            "src": "6175:335:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6689:237:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6706:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6717:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6699:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6699:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6699:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6740:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6751:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6736:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6736:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6756:2:16",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6729:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6729:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6729:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6779:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6790:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6775:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6775:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6795:34:16",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6768:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6768:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6768:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6850:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6861:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6846:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6846:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6866:17:16",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6839:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6839:45:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6839:45:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6893:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6905:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6916:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6901:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6901:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6893:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6666:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6680:4:16",
                "type": ""
              }
            ],
            "src": "6515:411:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6979:80:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7006:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7008:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7008:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7008:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6995:1:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7002:1:16"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6998:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6998:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6992:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6992:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6989:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7037:16:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7048:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7051:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7044:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7044:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7037:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6962:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6965:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6971:3:16",
                "type": ""
              }
            ],
            "src": "6931:128:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7116:176:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7235:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7237:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7237:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7237:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7147:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7140:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7140:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7133:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7133:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7155:1:16"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7162:66:16",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7230:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7158:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7158:74:16"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7152:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7152:81:16"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7129:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7129:105:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7126:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7266:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7281:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7284:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7277:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7266:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7095:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7098:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7104:7:16",
                "type": ""
              }
            ],
            "src": "7064:228:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7346:76:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7368:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7370:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7370:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7370:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7362:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7365:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7359:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7359:8:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7356:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7399:17:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7411:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7414:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7407:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7407:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7399:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7328:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7331:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7337:4:16",
                "type": ""
              }
            ],
            "src": "7297:125:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7480:205:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7490:10:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7499:1:16",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7494:1:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7559:63:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7584:3:16"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7589:1:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7580:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7580:11:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7603:3:16"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7608:1:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7599:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7599:11:16"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7593:5:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7593:18:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7573:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7573:39:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7573:39:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7520:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7523:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7517:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7517:13:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7531:19:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7533:15:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7542:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7545:2:16",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7538:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7538:10:16"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7533:1:16"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7513:3:16",
                    "statements": []
                  },
                  "src": "7509:113:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7648:31:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7661:3:16"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7666:6:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7657:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7657:16:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7675:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7650:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7650:27:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7650:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7637:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7640:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7634:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7634:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7631:2:16"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7458:3:16",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7463:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7468:6:16",
                "type": ""
              }
            ],
            "src": "7427:258:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7737:149:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7764:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7766:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7766:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7766:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7757:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7750:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7750:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7747:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7795:85:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7806:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7813:66:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7802:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7802:78:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7795:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7719:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7729:3:16",
                "type": ""
              }
            ],
            "src": "7690:196:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7938:148:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8029:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8031:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8031:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8031:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7954:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7961:66:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7951:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7951:77:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7948:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8060:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8071:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8078:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8067:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8067:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8060:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7920:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7930:3:16",
                "type": ""
              }
            ],
            "src": "7891:195:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8123:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8140:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8143:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8133:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8133:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8133:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8237:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8240:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8230:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8230:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8230:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8261:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8264:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8254:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8254:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8254:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8091:184:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8327:109:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8414:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8423:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8426:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8416:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8416:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8416:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8350:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8361:5:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8368:42:16",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8357:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8357:54:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8347:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8347:65:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8340:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8340:73:16"
                  },
                  "nodeType": "YulIf",
                  "src": "8337:2:16"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8316:5:16",
                "type": ""
              }
            ],
            "src": "8280:156:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ERC20_$925_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_address__to_t_address_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_da305ab119e44f345961db91c223a80ea959d57a8a57e55a8a580dde4b0130f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Not a admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "236:3372:15:-:0;;;544:125;;;;;;;;;-1:-1:-1;564:42:15;1997:4:0;595:10:15;564;;;;:42;:::i;:::-;612:5;:18;;-1:-1:-1;;;;;;612:18:15;620:10;612:18;;;;;;636:28;;416:18;;636:9;;;;:28;:::i;:::-;236:3372;;6084:110:0;6162:25;6173:4;6179:7;6162:10;;;;:25;:::i;:::-;6084:110;;:::o;4288:145::-;4371:18;4384:4;4371:12;;;;:18;:::i;:::-;2430:30;2441:4;2447:12;:10;;;;:12;:::i;:::-;2430:10;;;;:30;:::i;:::-;4401:25:::1;4412:4:::0;4418:7;4401:10:::1;;::::0;::::1;:25;:::i;:::-;4288:145:::0;;;:::o;6572:224::-;6646:22;6654:4;6660:7;6646;;;;:22;:::i;:::-;6641:149;;6684:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6684:29:0;;;;;;;;;:36;;-1:-1:-1;;6684:36:0;6716:4;6684:36;;;6766:12;:10;;;;:12;:::i;:::-;-1:-1:-1;;;;;6739:40:0;6757:7;-1:-1:-1;;;;;6739:40:0;6751:4;6739:40;;;;;;;;;;6572:224;;:::o;3917:121::-;3983:7;4009:12;;;;;;;;;;:22;;;;3917:121::o;587:96:5:-;666:10;587:96;:::o;3252:484:0:-;3332:22;3340:4;3346:7;3332;;;;:22;:::i;:::-;3327:403;;3515:41;-1:-1:-1;;;;;3515:41:0;;3553:2;3515:19;;;;;;:41;:::i;:::-;3627:38;3655:4;3662:2;3627:19;;;;;;:38;:::i;:::-;3422:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3422:265:0;;;;;;;;;;3370:349;;;;;;;;:::i;:::-;;;;;;;;2834:137;2912:4;2935:12;;;;;;;;;;;-1:-1:-1;;;;;2935:29:0;;;;;;;;;;;;;;;2834:137::o;1535:441:6:-;1610:13;1635:19;1667:10;1671:6;1667:1;:10;:::i;:::-;:14;;1680:1;1667:14;:::i;:::-;1657:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:25:6;;1635:47;;1692:15;:6;1699:1;1692:9;;;;;;;;;;;;;;;;;;;:15;-1:-1:-1;;;;;1692:15:6;;;;;;;;;1717;:6;1724:1;1717:9;;;;;;;;;;;;;;;;;;;:15;-1:-1:-1;;;;;1717:15:6;;;;;;;;-1:-1:-1;1747:9:6;1759:10;1763:6;1759:1;:10;:::i;:::-;:14;;1772:1;1759:14;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;1813:12;1826:5;1834:3;1826:11;1813:25;;;;;;;;;;;;;;;;;;1801:6;1808:1;1801:9;;;;;;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;1801:37:6;;;;;;;;-1:-1:-1;1852:11:6;;;;;1782:3;;;:::i;:::-;;;1742:132;;;-1:-1:-1;1891:10:6;;1883:55;;;;;;;;;;;;:::i;:::-;1962:6;1535:441;-1:-1:-1;;;1535:441:6:o;14:786:16:-;;425:25;420:3;413:38;480:6;474:13;496:62;551:6;546:2;541:3;537:12;530:4;522:6;518:17;496:62;:::i;:::-;622:19;617:2;577:16;;;609:11;;;602:40;667:13;;689:63;667:13;738:2;730:11;;723:4;711:17;;689:63;:::i;:::-;772:17;791:2;768:26;;403:397;-1:-1:-1;;;;403:397:16:o;805:383::-;;954:2;943:9;936:21;986:6;980:13;1029:6;1024:2;1013:9;1009:18;1002:34;1045:66;1104:6;1099:2;1088:9;1084:18;1079:2;1071:6;1067:15;1045:66;:::i;:::-;1172:2;1151:15;-1:-1:-1;;1147:29:16;1132:45;;;;1179:2;1128:54;;926:262;-1:-1:-1;;926:262:16:o;1193:356::-;1395:2;1377:21;;;1414:18;;;1407:30;1473:34;1468:2;1453:18;;1446:62;1540:2;1525:18;;1367:182::o;1554:128::-;;1625:1;1621:6;1618:1;1615:13;1612:2;;;1631:18;;:::i;:::-;-1:-1:-1;1667:9:16;;1602:80::o;1687:168::-;;1793:1;1789;1785:6;1781:14;1778:1;1775:21;1770:1;1763:9;1756:17;1752:45;1749:2;;;1800:18;;:::i;:::-;-1:-1:-1;1840:9:16;;1739:116::o;1860:258::-;1932:1;1942:113;1956:6;1953:1;1950:13;1942:113;;;2032:11;;;2026:18;2013:11;;;2006:39;1978:2;1971:10;1942:113;;;2073:6;2070:1;2067:13;2064:2;;;2108:1;2099:6;2094:3;2090:16;2083:27;2064:2;;1913:205;;;:::o;2123:136::-;;2190:5;2180:2;;2199:18;;:::i;:::-;-1:-1:-1;;;2235:18:16;;2170:89::o;2264:184::-;2316:77;2313:1;2306:88;2413:4;2410:1;2403:15;2437:4;2434:1;2427:15;2296:152;236:3372:15;;;;;;",
  "deployedSourceMap": "236:3372:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2545:202:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3917:121;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;384:50:15:-;;;:::i;1241:429::-;;;;;;:::i;:::-;;:::i;1807:399::-;;;;;;:::i;:::-;;:::i;:::-;;4288:145:0;;;;;;:::i;:::-;;:::i;5305:214::-;;;;;;:::i;:::-;;:::i;2834:137::-;;;;;;:::i;:::-;;:::i;993:90:15:-;;;:::i;:::-;;;;;;;:::i;284:48::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;781:127::-;;;;;;:::i;:::-;;:::i;1952:49:0:-;;;:::i;4667:147::-;;;;;;:::i;:::-;;:::i;2330:1276:15:-;;;;;;:::i;:::-;;:::i;2545:202:0:-;2630:4;2653:47;;;2668:32;2653:47;;:87;;;2704:36;2728:11;2704:23;:36::i;:::-;2646:94;2545:202;-1:-1:-1;;2545:202:0:o;3917:121::-;3983:7;4009:12;;;;;;;;;;:22;;;;3917:121::o;384:50:15:-;416:18;384:50;:::o;1241:429::-;1338:4;;1352:296;1376:24;;;;;;;:11;:24;;;;;:31;1372:35;;1352:296;;;1445:24;;;1422:20;1445:24;;;:11;:24;;;;;:27;;1470:1;;1445:27;;;;;;;;;;;;;;;;;;;;;;;;;;1520:42;;;;;;;;1445:27;;;;;-1:-1:-1;1445:27:15;;1520:40;;:42;;;;;;;;;;1445:27;1520:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1480:90;;1598:12;1582:28;;:12;:28;;;1578:64;;;1629:4;1622:11;;;;;;;1578:64;1352:296;;1409:3;;;;;:::i;:::-;;;;1352:296;;;-1:-1:-1;1660:5:15;;1241:429;-1:-1:-1;;;1241:429:15:o;1807:399::-;1945:33;1957:8;1967:10;1945:11;:33::i;:::-;:42;1937:51;;;;;;2012:10;1994:28;;2028:14;2075:8;2085;2095:5;2102:15;2119:5;;;;;;;;;;;2060:65;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2149:10:15;2137:23;;;;:11;:23;;;;;;;:36;;;;;;;;;;;;;;;;:23;:36;;;-1:-1:-1;;2137:36:15;;;;;;;;2179:9;:22;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1807:399:15:o;4288:145:0:-;4371:18;4384:4;4371:12;:18::i;:::-;2430:30;2441:4;2447:12;:10;:12::i;:::-;2430:10;:30::i;:::-;4401:25:::1;4412:4;4418:7;4401:10;:25::i;:::-;4288:145:::0;;;:::o;5305:214::-;5411:12;:10;:12::i;:::-;5400:23;;:7;:23;;;5392:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5486:26;5498:4;5504:7;5486:11;:26::i;:::-;5305:214;;:::o;2834:137::-;2912:4;2935:12;;;;;;;;;;;:29;;;;;;;;;;;;;;;;2834:137::o;993:90:15:-;1038:16;1069:9;1062:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:90;:::o;284:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;284:48:15;;-1:-1:-1;284:48:15:o;781:127::-;886:17;;;;;;;:11;:17;;;;;;;;;879:24;;;;;;;;;;;;;;;;;853:16;;879:24;;;886:17;879:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;781:127;;;:::o;1952:49:0:-;1997:4;1952:49;:::o;4667:147::-;4751:18;4764:4;4751:12;:18::i;:::-;2430:30;2441:4;2447:12;:10;:12::i;2430:30::-;4781:26:::1;4793:4;4799:7;4781:11;:26::i;2330:1276:15:-:0;2409:10;2433:26;416:18;2409:10;2433:7;:26::i;:::-;2425:50;;;;;;;;;;;;:::i;:::-;2490:37;2502:12;2516:10;2490:11;:37::i;:::-;:45;;2531:4;2490:45;2482:54;;;;;;2542:19;;;2594:325;2618:24;;;;;;;:11;:24;;;;;:31;2614:35;;2594:325;;;2687:24;;;2664:20;2687:24;;;:11;:24;;;;;:27;;2712:1;;2687:27;;;;;;;;;;;;;;;;;;;;;;;;;;2762:42;;;;;;;;2687:27;;;;;-1:-1:-1;2687:27:15;;2762:40;;:42;;;;;;;;;;2687:27;2762:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2722:90;;2840:12;2824:28;;:12;:28;;;2820:93;;;2878:1;2864:15;;2900:4;2889:15;;2820:93;2594:325;;2651:3;;;;;:::i;:::-;;;;2594:325;;;-1:-1:-1;2940:4:15;2928:16;;;;2924:192;;;2994:24;;;;;;;:11;:24;;;;;;;;3028:31;;2994:24;;3028:35;;;:::i;:::-;2994:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:24;;;;;2994:77;2954:24;;;;;;;:37;;2994:77;;;;;2954:24;2979:11;;2954:37;;;;;;;;;;;;;;;;;;;;;;;;;;:117;;-1:-1:-1;;2954:117:15;;;;;;;;3079:24;;;;;-1:-1:-1;3079:24:15;;;;;;:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3079:30:15;;;;;-1:-1:-1;;3079:30:15;;;;;;2924:192;-1:-1:-1;3122:27:15;;;3177:304;3201:9;:16;3197:20;;3177:304;;;3232:20;3255:9;3265:1;3255:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;3316:42;;;;;;;;3255:12;;;;;-1:-1:-1;3255:12:15;;3316:40;;:42;;;;;;;;;;3255:12;3316:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3276:90;;3394:12;3378:28;;:12;:28;;;3374:101;;;3440:1;3418:23;;3462:4;3451:15;;3374:101;3177:304;;3219:3;;;;;:::i;:::-;;;;3177:304;;;-1:-1:-1;3502:4:15;3490:16;;;;3486:116;;;3541:9;3551:16;;:20;;3570:1;;3551:20;:::i;:::-;3541:31;;;;;;;;;;;;;;;;;;;;;;;;;;3516:9;:22;;3541:31;;;;;3526:11;;3516:22;;;;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;3580:9;:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3580:15:15;;;;;-1:-1:-1;;3580:15:15;;;;;;3486:116;2330:1276;;;;;:::o;1535:441:6:-;1610:13;1635:19;1667:10;1671:6;1667:1;:10;:::i;:::-;:14;;1680:1;1667:14;:::i;:::-;1657:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:25:6;;1635:47;;1692:15;:6;1699:1;1692:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;1717;:6;1724:1;1717:9;;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;-1:-1:-1;1747:9:6;1759:10;1763:6;1759:1;:10;:::i;:::-;:14;;1772:1;1759:14;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;1813:12;1826:5;1834:3;1826:11;1813:25;;;;;;;;;;;;;;;;;;1801:6;1808:1;1801:9;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;-1:-1:-1;1852:11:6;;;;;1782:3;;;:::i;:::-;;;1742:132;;;-1:-1:-1;1891:10:6;;1883:55;;;;;;;;;;;;:::i;:::-;1962:6;1535:441;-1:-1:-1;;;1535:441:6:o;763:155:7:-;871:40;;;886:25;871:40;763:155;;;:::o;587:96:5:-;666:10;587:96;:::o;3252:484:0:-;3332:22;3340:4;3346:7;3332;:22::i;:::-;3327:403;;3515:41;3543:7;3515:41;;3553:2;3515:19;:41::i;:::-;3627:38;3655:4;3662:2;3627:19;:38::i;:::-;3422:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3422:265:0;;;;;;;;;;3370:349;;;;;;;;:::i;6572:224::-;6646:22;6654:4;6660:7;6646;:22::i;:::-;6641:149;;6684:6;:12;;;;;;;;;;;:29;;;;;;;;;;:36;;-1:-1:-1;;6684:36:0;6716:4;6684:36;;;6766:12;:10;:12::i;:::-;6739:40;;6757:7;6739:40;;6751:4;6739:40;;;;;;;;;;6572:224;;:::o;6802:225::-;6876:22;6884:4;6890:7;6876;:22::i;:::-;6872:149;;;6946:5;6914:12;;;;;;;;;;;:29;;;;;;;;;;:37;;-1:-1:-1;;6914:37:0;;;6997:12;:10;:12::i;:::-;6970:40;;6988:7;6970:40;;6982:4;6970:40;;;;;;;;;;6802:225;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:259:16:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:402::-;;;407:2;395:9;386:7;382:23;378:32;375:2;;;428:6;420;413:22;375:2;472:9;459:23;491:33;518:5;491:33;:::i;:::-;543:5;-1:-1:-1;600:2:16;585:18;;572:32;613:35;572:32;613:35;:::i;:::-;667:7;657:17;;;365:315;;;;;:::o;685:327::-;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;879:9;866:23;898:33;925:5;898:33;:::i;:::-;950:5;1002:2;987:18;;;;974:32;;-1:-1:-1;;;772:240:16:o;1017:539::-;;;;;1180:3;1168:9;1159:7;1155:23;1151:33;1148:2;;;1202:6;1194;1187:22;1148:2;1246:9;1233:23;1265:33;1292:5;1265:33;:::i;:::-;1317:5;-1:-1:-1;1369:2:16;1354:18;;1341:32;;-1:-1:-1;1420:2:16;1405:18;;1392:32;;-1:-1:-1;1476:2:16;1461:18;;1448:32;1489:35;1448:32;1489:35;:::i;:::-;1138:418;;;;-1:-1:-1;1138:418:16;;-1:-1:-1;;1138:418:16:o;1561:190::-;;1673:2;1661:9;1652:7;1648:23;1644:32;1641:2;;;1694:6;1686;1679:22;1641:2;-1:-1:-1;1722:23:16;;1631:120;-1:-1:-1;1631:120:16:o;1756:327::-;;;1885:2;1873:9;1864:7;1860:23;1856:32;1853:2;;;1906:6;1898;1891:22;1853:2;1947:9;1934:23;1924:33;;2007:2;1996:9;1992:18;1979:32;2020:33;2047:5;2020:33;:::i;2088:352::-;;2199:2;2187:9;2178:7;2174:23;2170:32;2167:2;;;2220:6;2212;2205:22;2167:2;2264:9;2251:23;2314:66;2307:5;2303:78;2296:5;2293:89;2283:2;;2401:6;2393;2386:22;2445:276;;2581:2;2569:9;2560:7;2556:23;2552:32;2549:2;;;2602:6;2594;2587:22;2549:2;2639:9;2633:16;2658:33;2685:5;2658:33;:::i;2726:786::-;;3137:25;3132:3;3125:38;3192:6;3186:13;3208:62;3263:6;3258:2;3253:3;3249:12;3242:4;3234:6;3230:17;3208:62;:::i;:::-;3334:19;3329:2;3289:16;;;3321:11;;;3314:40;3379:13;;3401:63;3379:13;3450:2;3442:11;;3435:4;3423:17;;3401:63;:::i;:::-;3484:17;3503:2;3480:26;;3115:397;-1:-1:-1;;;;3115:397:16:o;3517:226::-;3693:42;3681:55;;;;3663:74;;3651:2;3636:18;;3618:125::o;3748:551::-;4017:42;4086:15;;;4068:34;;4133:2;4118:18;;4111:34;;;;4176:2;4161:18;;4154:34;;;;4224:15;;4219:2;4204:18;;4197:43;4277:15;;;4271:3;4256:19;;4249:44;3994:3;3979:19;;3961:338::o;4304:684::-;4475:2;4527:21;;;4597:13;;4500:18;;;4619:22;;;4304:684;;4475:2;4698:15;;;;4672:2;4657:18;;;4304:684;4744:218;4758:6;4755:1;4752:13;4744:218;;;4823:13;;4838:42;4819:62;4807:75;;4937:15;;;;4902:12;;;;4780:1;4773:9;4744:218;;;-1:-1:-1;4979:3:16;;4455:533;-1:-1:-1;;;;;;4455:533:16:o;4993:187::-;5158:14;;5151:22;5133:41;;5121:2;5106:18;;5088:92::o;5185:177::-;5331:25;;;5319:2;5304:18;;5286:76::o;5367:442::-;;5516:2;5505:9;5498:21;5548:6;5542:13;5591:6;5586:2;5575:9;5571:18;5564:34;5607:66;5666:6;5661:2;5650:9;5646:18;5641:2;5633:6;5629:15;5607:66;:::i;:::-;5725:2;5713:15;-1:-1:-1;;5709:88:16;5694:104;;;;5800:2;5690:113;;5488:321;-1:-1:-1;;5488:321:16:o;5814:356::-;6016:2;5998:21;;;6035:18;;;6028:30;6094:34;6089:2;6074:18;;6067:62;6161:2;6146:18;;5988:182::o;6175:335::-;6377:2;6359:21;;;6416:2;6396:18;;;6389:30;6455:13;6450:2;6435:18;;6428:41;6501:2;6486:18;;6349:161::o;6515:411::-;6717:2;6699:21;;;6756:2;6736:18;;;6729:30;6795:34;6790:2;6775:18;;6768:62;6866:17;6861:2;6846:18;;6839:45;6916:3;6901:19;;6689:237::o;6931:128::-;;7002:1;6998:6;6995:1;6992:13;6989:2;;;7008:18;;:::i;:::-;-1:-1:-1;7044:9:16;;6979:80::o;7064:228::-;;7230:1;-1:-1:-1;;7158:74:16;7155:1;7152:81;7147:1;7140:9;7133:17;7129:105;7126:2;;;7237:18;;:::i;:::-;-1:-1:-1;7277:9:16;;7116:176::o;7297:125::-;;7365:1;7362;7359:8;7356:2;;;7370:18;;:::i;:::-;-1:-1:-1;7407:9:16;;7346:76::o;7427:258::-;7499:1;7509:113;7523:6;7520:1;7517:13;7509:113;;;7599:11;;;7593:18;7580:11;;;7573:39;7545:2;7538:10;7509:113;;;7640:6;7637:1;7634:13;7631:2;;;7675:1;7666:6;7661:3;7657:16;7650:27;7631:2;;7480:205;;;:::o;7690:196::-;;7757:5;7747:2;;7766:18;;:::i;:::-;-1:-1:-1;;;7802:78:16;;7737:149::o;7891:195::-;;-1:-1:-1;;7954:5:16;7951:77;7948:2;;;8031:18;;:::i;:::-;-1:-1:-1;8078:1:16;8067:13;;7938:148::o;8091:184::-;8143:77;8140:1;8133:88;8240:4;8237:1;8230:15;8264:4;8261:1;8254:15;8280:156;8368:42;8361:5;8357:54;8350:5;8347:65;8337:2;;8426:1;8423;8416:12;8337:2;8327:109;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./TokenVault.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title TokenVaultFactory\n */\ncontract TokenVaultFactory is AccessControl {\n  mapping(address => address[]) public vaultLookup;\n  address[] allVaults;\n  address private admin;\n  bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n\n  /**\n   * @dev Constructor, provide Admin role to contract deployer\n   *\n\n   * Requirements:\n   *\n   */\n  constructor() {\n    _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    admin = msg.sender;\n    grantRole(ADMIN, msg.sender);\n  }\n\n  /**\n   * @dev Given a wallet address, what are the associated vaults\n   *\n\n   * Requirements:\n   *\n   */\n\n  function getVaultsByUser(address user)\n    public\n    view\n    returns (address[] memory)\n  {\n    return vaultLookup[user];\n  }\n\n  /**\n   * @dev Get a list of all the vaults\n   *\n\n   * Requirements:\n   *\n   */\n  function getAllVaults() public view returns (address[] memory) {\n    return allVaults;\n  }\n\n  /**\n   * @dev Check if the user address already has a vault with the same token\n   *\n   * TODO: check for expired vaults\n\n   * Requirements:\n   *\n   */\n  function vaultExists(address erc20Address, address userAddress)\n    public\n    view\n    returns (bool)\n  {\n    for (uint256 i = 0; i < vaultLookup[userAddress].length; i++) {\n      address vaultAddress = vaultLookup[userAddress][i];\n      address tokenAddress = address(\n        TokenVault(vaultAddress).getERC20Address()\n      );\n      if (tokenAddress == erc20Address) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @dev Create a new vault and store it in the registry\n   *\n\n   * Requirements:\n   * No existing vaults for that user\n   */\n  function createVault(\n    address newToken,\n    uint256 maturity,\n    uint256 yield,\n    address contractCreator\n  ) public {\n    require(vaultExists(newToken, msg.sender) == false);\n    contractCreator = msg.sender;\n    address tVault = address(\n      new TokenVault(newToken, maturity, yield, contractCreator, admin)\n    );\n    vaultLookup[msg.sender].push(tVault);\n    allVaults.push(tVault);\n  }\n\n  /**\n   * @dev Remove vault from registry, \n   *\n\n   * Requirements:\n   * must be and admin and vault must exist\n   */\n  function destroyVault(address erc20Address) public {\n    address userAddress = msg.sender;\n    require(hasRole(ADMIN, msg.sender), \"Not a admin\");\n\n    require(vaultExists(erc20Address, msg.sender) == true);\n    uint256 targetIndex;\n    bool hasVault = false;\n    for (uint256 i = 0; i < vaultLookup[userAddress].length; i++) {\n      address vaultAddress = vaultLookup[userAddress][i];\n      address tokenAddress = address(\n        TokenVault(vaultAddress).getERC20Address()\n      );\n      if (tokenAddress == erc20Address) {\n        targetIndex = i;\n        hasVault = true;\n      }\n    }\n    if (hasVault == true) {\n      vaultLookup[userAddress][targetIndex] = vaultLookup[userAddress][\n        vaultLookup[userAddress].length - 1\n      ];\n      vaultLookup[userAddress].pop();\n    }\n\n    uint256 allVaultTargetIndex;\n    hasVault = false;\n    for (uint256 i = 0; i < allVaults.length; i++) {\n      address vaultAddress = allVaults[i];\n\n      address tokenAddress = address(\n        TokenVault(vaultAddress).getERC20Address()\n      );\n      if (tokenAddress == erc20Address) {\n        allVaultTargetIndex = i;\n        hasVault = true;\n      }\n    }\n    if (hasVault == true) {\n      allVaults[targetIndex] = allVaults[allVaults.length - 1];\n      allVaults.pop();\n    }\n  }\n}\n",
  "sourcePath": "/Users/charlespacker/alloyx-frontend/alloyx/contracts/TokenVaultFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/TokenVaultFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        306
      ],
      "Context": [
        1050
      ],
      "ERC165": [
        1277
      ],
      "ERC20": [
        925
      ],
      "IAccessControl": [
        379
      ],
      "IERC165": [
        1289
      ],
      "IERC20": [
        1003
      ],
      "IERC20Metadata": [
        1028
      ],
      "Strings": [
        1253
      ],
      "TokenVault": [
        3133
      ],
      "TokenVaultFactory": [
        3498
      ]
    },
    "id": 3499,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:15"
      },
      {
        "absolutePath": "project:/contracts/TokenVault.sol",
        "file": "./TokenVault.sol",
        "id": 3136,
        "nodeType": "ImportDirective",
        "scope": 3499,
        "sourceUnit": 3134,
        "src": "57:26:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3137,
        "nodeType": "ImportDirective",
        "scope": 3499,
        "sourceUnit": 926,
        "src": "84:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 3138,
        "nodeType": "ImportDirective",
        "scope": 3499,
        "sourceUnit": 307,
        "src": "140:58:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3140,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 306,
              "src": "266:13:15"
            },
            "id": 3141,
            "nodeType": "InheritanceSpecifier",
            "src": "266:13:15"
          }
        ],
        "contractDependencies": [
          306,
          379,
          1050,
          1277,
          1289,
          3133
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3139,
          "nodeType": "StructuredDocumentation",
          "src": "200:35:15",
          "text": " @title TokenVaultFactory"
        },
        "fullyImplemented": true,
        "id": 3498,
        "linearizedBaseContracts": [
          3498,
          306,
          1277,
          1289,
          379,
          1050
        ],
        "name": "TokenVaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9fa19215",
            "id": 3146,
            "mutability": "mutable",
            "name": "vaultLookup",
            "nodeType": "VariableDeclaration",
            "scope": 3498,
            "src": "284:48:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 3145,
              "keyType": {
                "id": 3142,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "292:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "284:29:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 3143,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "303:7:15",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 3144,
                "nodeType": "ArrayTypeName",
                "src": "303:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3149,
            "mutability": "mutable",
            "name": "allVaults",
            "nodeType": "VariableDeclaration",
            "scope": 3498,
            "src": "336:19:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3147,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "336:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3148,
              "nodeType": "ArrayTypeName",
              "src": "336:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3151,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 3498,
            "src": "359:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3150,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "359:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "2a0acc6a",
            "id": 3156,
            "mutability": "constant",
            "name": "ADMIN",
            "nodeType": "VariableDeclaration",
            "scope": 3498,
            "src": "384:50:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3152,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "384:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e",
                  "id": 3154,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "426:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                    "typeString": "literal_string \"ADMIN\""
                  },
                  "value": "ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                    "typeString": "literal_string \"ADMIN\""
                  }
                ],
                "id": 3153,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "416:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3155,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "416:18:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3177,
              "nodeType": "Block",
              "src": "558:111:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3161,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "575:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 3162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "595:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "595:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3160,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "564:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3165,
                  "nodeType": "ExpressionStatement",
                  "src": "564:42:15"
                },
                {
                  "expression": {
                    "id": 3169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3166,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3151,
                      "src": "612:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3167,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "620:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "620:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "612:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3170,
                  "nodeType": "ExpressionStatement",
                  "src": "612:18:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3172,
                        "name": "ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3156,
                        "src": "646:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 3173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "653:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "653:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3171,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "636:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "636:28:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3176,
                  "nodeType": "ExpressionStatement",
                  "src": "636:28:15"
                }
              ]
            },
            "documentation": {
              "id": 3157,
              "nodeType": "StructuredDocumentation",
              "src": "439:102:15",
              "text": " @dev Constructor, provide Admin role to contract deployer\n Requirements:"
            },
            "id": 3178,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:2:15"
            },
            "returnParameters": {
              "id": 3159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:15"
            },
            "scope": 3498,
            "src": "544:125:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3191,
              "nodeType": "Block",
              "src": "873:35:15",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3187,
                      "name": "vaultLookup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3146,
                      "src": "886:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 3189,
                    "indexExpression": {
                      "id": 3188,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3181,
                      "src": "898:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "886:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3186,
                  "id": 3190,
                  "nodeType": "Return",
                  "src": "879:24:15"
                }
              ]
            },
            "documentation": {
              "id": 3179,
              "nodeType": "StructuredDocumentation",
              "src": "673:104:15",
              "text": " @dev Given a wallet address, what are the associated vaults\n Requirements:"
            },
            "functionSelector": "a07213e9",
            "id": 3192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultsByUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3181,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 3192,
                  "src": "806:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "805:14:15"
            },
            "returnParameters": {
              "id": 3186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3185,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3192,
                  "src": "853:16:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3183,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "853:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3184,
                    "nodeType": "ArrayTypeName",
                    "src": "853:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "852:18:15"
            },
            "scope": 3498,
            "src": "781:127:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3201,
              "nodeType": "Block",
              "src": "1056:27:15",
              "statements": [
                {
                  "expression": {
                    "id": 3199,
                    "name": "allVaults",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3149,
                    "src": "1069:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3198,
                  "id": 3200,
                  "nodeType": "Return",
                  "src": "1062:16:15"
                }
              ]
            },
            "documentation": {
              "id": 3193,
              "nodeType": "StructuredDocumentation",
              "src": "912:78:15",
              "text": " @dev Get a list of all the vaults\n Requirements:"
            },
            "functionSelector": "97331bf9",
            "id": 3202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllVaults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:2:15"
            },
            "returnParameters": {
              "id": 3198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3197,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3202,
                  "src": "1038:16:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3195,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1038:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3196,
                    "nodeType": "ArrayTypeName",
                    "src": "1038:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:18:15"
            },
            "scope": 3498,
            "src": "993:90:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3255,
              "nodeType": "Block",
              "src": "1346:324:15",
              "statements": [
                {
                  "body": {
                    "id": 3251,
                    "nodeType": "Block",
                    "src": "1414:234:15",
                    "statements": [
                      {
                        "assignments": [
                          3226
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3226,
                            "mutability": "mutable",
                            "name": "vaultAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3251,
                            "src": "1422:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3225,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1422:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3232,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3227,
                              "name": "vaultLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3146,
                              "src": "1445:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 3229,
                            "indexExpression": {
                              "id": 3228,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3207,
                              "src": "1457:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1445:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3231,
                          "indexExpression": {
                            "id": 3230,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3213,
                            "src": "1470:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1445:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1422:50:15"
                      },
                      {
                        "assignments": [
                          3234
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3234,
                            "mutability": "mutable",
                            "name": "tokenAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3251,
                            "src": "1480:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3233,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1480:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3243,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3238,
                                      "name": "vaultAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3226,
                                      "src": "1531:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3237,
                                    "name": "TokenVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3133,
                                    "src": "1520:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TokenVault_$3133_$",
                                      "typeString": "type(contract TokenVault)"
                                    }
                                  },
                                  "id": 3239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1520:24:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenVault_$3133",
                                    "typeString": "contract TokenVault"
                                  }
                                },
                                "id": 3240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getERC20Address",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2543,
                                "src": "1520:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$925_$",
                                  "typeString": "function () view external returns (contract ERC20)"
                                }
                              },
                              "id": 3241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1520:42:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 3236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1503:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1503:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:67:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1480:90:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3244,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3234,
                            "src": "1582:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3245,
                            "name": "erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3205,
                            "src": "1598:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1582:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3250,
                        "nodeType": "IfStatement",
                        "src": "1578:64:15",
                        "trueBody": {
                          "id": 3249,
                          "nodeType": "Block",
                          "src": "1612:30:15",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 3247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1629:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 3211,
                              "id": 3248,
                              "nodeType": "Return",
                              "src": "1622:11:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3216,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3213,
                      "src": "1372:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3217,
                          "name": "vaultLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3146,
                          "src": "1376:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 3219,
                        "indexExpression": {
                          "id": 3218,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3207,
                          "src": "1388:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1376:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1376:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1372:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3252,
                  "initializationExpression": {
                    "assignments": [
                      3213
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3213,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3252,
                        "src": "1357:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3215,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1369:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1357:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1409:3:15",
                      "subExpression": {
                        "id": 3222,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3213,
                        "src": "1409:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3224,
                    "nodeType": "ExpressionStatement",
                    "src": "1409:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "1352:296:15"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1660:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 3211,
                  "id": 3254,
                  "nodeType": "Return",
                  "src": "1653:12:15"
                }
              ]
            },
            "documentation": {
              "id": 3203,
              "nodeType": "StructuredDocumentation",
              "src": "1087:151:15",
              "text": " @dev Check if the user address already has a vault with the same token\n TODO: check for expired vaults\n Requirements:"
            },
            "functionSelector": "2d1ed26a",
            "id": 3256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3205,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "1262:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3207,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "1284:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:43:15"
            },
            "returnParameters": {
              "id": 3211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3210,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "1338:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3209,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1337:6:15"
            },
            "scope": 3498,
            "src": "1241:429:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3312,
              "nodeType": "Block",
              "src": "1931:275:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3270,
                              "name": "newToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3259,
                              "src": "1957:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1967:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1967:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3269,
                            "name": "vaultExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3256,
                            "src": "1945:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 3273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1945:33:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1982:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1945:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1937:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:51:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3277,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:51:15"
                },
                {
                  "expression": {
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3278,
                      "name": "contractCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3265,
                      "src": "1994:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3279,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2012:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2012:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1994:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3282,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:28:15"
                },
                {
                  "assignments": [
                    3284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3284,
                      "mutability": "mutable",
                      "name": "tVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 3312,
                      "src": "2028:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3283,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2028:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3297,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3290,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3259,
                            "src": "2075:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3291,
                            "name": "maturity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3261,
                            "src": "2085:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3292,
                            "name": "yield",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3263,
                            "src": "2095:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3293,
                            "name": "contractCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3265,
                            "src": "2102:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3294,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3151,
                            "src": "2119:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2060:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_contract$_TokenVault_$3133_$",
                            "typeString": "function (address,uint256,uint256,address,address) returns (contract TokenVault)"
                          },
                          "typeName": {
                            "id": 3288,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3287,
                              "name": "TokenVault",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3133,
                              "src": "2064:10:15"
                            },
                            "referencedDeclaration": 3133,
                            "src": "2064:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenVault_$3133",
                              "typeString": "contract TokenVault"
                            }
                          }
                        },
                        "id": 3295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2060:65:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenVault_$3133",
                          "typeString": "contract TokenVault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenVault_$3133",
                          "typeString": "contract TokenVault"
                        }
                      ],
                      "id": 3286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2045:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3285,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2045:7:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:86:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2028:103:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3303,
                        "name": "tVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "2166:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 3298,
                          "name": "vaultLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3146,
                          "src": "2137:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 3301,
                        "indexExpression": {
                          "expression": {
                            "id": 3299,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2149:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2149:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2137:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2137:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3305,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:36:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3309,
                        "name": "tVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "2194:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3306,
                        "name": "allVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3149,
                        "src": "2179:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2179:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:22:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3311,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:22:15"
                }
              ]
            },
            "documentation": {
              "id": 3257,
              "nodeType": "StructuredDocumentation",
              "src": "1674:130:15",
              "text": " @dev Create a new vault and store it in the registry\n Requirements:\n No existing vaults for that user"
            },
            "functionSelector": "2d5fd62e",
            "id": 3313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3259,
                  "mutability": "mutable",
                  "name": "newToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3313,
                  "src": "1833:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3261,
                  "mutability": "mutable",
                  "name": "maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 3313,
                  "src": "1855:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "yield",
                  "nodeType": "VariableDeclaration",
                  "scope": 3313,
                  "src": "1877:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3265,
                  "mutability": "mutable",
                  "name": "contractCreator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3313,
                  "src": "1896:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:96:15"
            },
            "returnParameters": {
              "id": 3267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1931:0:15"
            },
            "scope": 3498,
            "src": "1807:399:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3496,
              "nodeType": "Block",
              "src": "2381:1225:15",
              "statements": [
                {
                  "assignments": [
                    3320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3320,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3496,
                      "src": "2387:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3319,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2387:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3323,
                  "initialValue": {
                    "expression": {
                      "id": 3321,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2409:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2409:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2387:32:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3326,
                            "name": "ADMIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3156,
                            "src": "2441:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3327,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2448:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2448:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3325,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "2433:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2433:26:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612061646d696e",
                        "id": 3330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2461:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da305ab119e44f345961db91c223a80ea959d57a8a57e55a8a580dde4b0130f0",
                          "typeString": "literal_string \"Not a admin\""
                        },
                        "value": "Not a admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da305ab119e44f345961db91c223a80ea959d57a8a57e55a8a580dde4b0130f0",
                          "typeString": "literal_string \"Not a admin\""
                        }
                      ],
                      "id": 3324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2425:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2425:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3332,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3335,
                              "name": "erc20Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3316,
                              "src": "2502:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3336,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2516:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2516:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3334,
                            "name": "vaultExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3256,
                            "src": "2490:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 3338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2490:37:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 3339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2531:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2490:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2482:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2482:54:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3342,
                  "nodeType": "ExpressionStatement",
                  "src": "2482:54:15"
                },
                {
                  "assignments": [
                    3344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3344,
                      "mutability": "mutable",
                      "name": "targetIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3496,
                      "src": "2542:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3343,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2542:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3345,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2542:19:15"
                },
                {
                  "assignments": [
                    3347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3347,
                      "mutability": "mutable",
                      "name": "hasVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 3496,
                      "src": "2567:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3346,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2567:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3349,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 3348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2583:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2567:21:15"
                },
                {
                  "body": {
                    "id": 3395,
                    "nodeType": "Block",
                    "src": "2656:263:15",
                    "statements": [
                      {
                        "assignments": [
                          3364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3364,
                            "mutability": "mutable",
                            "name": "vaultAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3395,
                            "src": "2664:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2664:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3370,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3365,
                              "name": "vaultLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3146,
                              "src": "2687:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 3367,
                            "indexExpression": {
                              "id": 3366,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3320,
                              "src": "2699:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2687:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3369,
                          "indexExpression": {
                            "id": 3368,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3351,
                            "src": "2712:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2687:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2664:50:15"
                      },
                      {
                        "assignments": [
                          3372
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3372,
                            "mutability": "mutable",
                            "name": "tokenAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3395,
                            "src": "2722:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3371,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2722:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3381,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3376,
                                      "name": "vaultAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3364,
                                      "src": "2773:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3375,
                                    "name": "TokenVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3133,
                                    "src": "2762:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TokenVault_$3133_$",
                                      "typeString": "type(contract TokenVault)"
                                    }
                                  },
                                  "id": 3377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2762:24:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenVault_$3133",
                                    "typeString": "contract TokenVault"
                                  }
                                },
                                "id": 3378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getERC20Address",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2543,
                                "src": "2762:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$925_$",
                                  "typeString": "function () view external returns (contract ERC20)"
                                }
                              },
                              "id": 3379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2762:42:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 3374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2745:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3373,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2745:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2745:67:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2722:90:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3382,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3372,
                            "src": "2824:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3383,
                            "name": "erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3316,
                            "src": "2840:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2824:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3394,
                        "nodeType": "IfStatement",
                        "src": "2820:93:15",
                        "trueBody": {
                          "id": 3393,
                          "nodeType": "Block",
                          "src": "2854:59:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 3387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3385,
                                  "name": "targetIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3344,
                                  "src": "2864:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3386,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3351,
                                  "src": "2878:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2864:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3388,
                              "nodeType": "ExpressionStatement",
                              "src": "2864:15:15"
                            },
                            {
                              "expression": {
                                "id": 3391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3389,
                                  "name": "hasVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3347,
                                  "src": "2889:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2900:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2889:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3392,
                              "nodeType": "ExpressionStatement",
                              "src": "2889:15:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3354,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3351,
                      "src": "2614:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3355,
                          "name": "vaultLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3146,
                          "src": "2618:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 3357,
                        "indexExpression": {
                          "id": 3356,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3320,
                          "src": "2630:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2618:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2618:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2614:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3396,
                  "initializationExpression": {
                    "assignments": [
                      3351
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3351,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3396,
                        "src": "2599:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2599:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3353,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2611:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2599:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2651:3:15",
                      "subExpression": {
                        "id": 3360,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "2651:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3362,
                    "nodeType": "ExpressionStatement",
                    "src": "2651:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "2594:325:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3397,
                      "name": "hasVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3347,
                      "src": "2928:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 3398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2940:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2928:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3424,
                  "nodeType": "IfStatement",
                  "src": "2924:192:15",
                  "trueBody": {
                    "id": 3423,
                    "nodeType": "Block",
                    "src": "2946:170:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 3415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3400,
                                "name": "vaultLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3146,
                                "src": "2954:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 3403,
                              "indexExpression": {
                                "id": 3401,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3320,
                                "src": "2966:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3404,
                            "indexExpression": {
                              "id": 3402,
                              "name": "targetIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3344,
                              "src": "2979:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2954:37:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3405,
                                "name": "vaultLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3146,
                                "src": "2994:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 3407,
                              "indexExpression": {
                                "id": 3406,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3320,
                                "src": "3006:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2994:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3414,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3408,
                                    "name": "vaultLookup",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3146,
                                    "src": "3028:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                      "typeString": "mapping(address => address[] storage ref)"
                                    }
                                  },
                                  "id": 3410,
                                  "indexExpression": {
                                    "id": 3409,
                                    "name": "userAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3320,
                                    "src": "3040:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3028:24:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3028:31:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3062:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3028:35:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2994:77:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2954:117:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3416,
                        "nodeType": "ExpressionStatement",
                        "src": "2954:117:15"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 3417,
                                "name": "vaultLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3146,
                                "src": "3079:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 3419,
                              "indexExpression": {
                                "id": 3418,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3320,
                                "src": "3091:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3079:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3079:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3079:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3422,
                        "nodeType": "ExpressionStatement",
                        "src": "3079:30:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3426,
                      "mutability": "mutable",
                      "name": "allVaultTargetIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3496,
                      "src": "3122:27:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3122:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3427,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3122:27:15"
                },
                {
                  "expression": {
                    "id": 3430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3428,
                      "name": "hasVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3347,
                      "src": "3155:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3166:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3155:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3431,
                  "nodeType": "ExpressionStatement",
                  "src": "3155:16:15"
                },
                {
                  "body": {
                    "id": 3473,
                    "nodeType": "Block",
                    "src": "3224:257:15",
                    "statements": [
                      {
                        "assignments": [
                          3444
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3444,
                            "mutability": "mutable",
                            "name": "vaultAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3473,
                            "src": "3232:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3232:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3448,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3445,
                            "name": "allVaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3149,
                            "src": "3255:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3447,
                          "indexExpression": {
                            "id": 3446,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3433,
                            "src": "3265:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3255:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3232:35:15"
                      },
                      {
                        "assignments": [
                          3450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3450,
                            "mutability": "mutable",
                            "name": "tokenAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3473,
                            "src": "3276:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3449,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3276:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3459,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3454,
                                      "name": "vaultAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "3327:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3453,
                                    "name": "TokenVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3133,
                                    "src": "3316:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TokenVault_$3133_$",
                                      "typeString": "type(contract TokenVault)"
                                    }
                                  },
                                  "id": 3455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3316:24:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenVault_$3133",
                                    "typeString": "contract TokenVault"
                                  }
                                },
                                "id": 3456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getERC20Address",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2543,
                                "src": "3316:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$925_$",
                                  "typeString": "function () view external returns (contract ERC20)"
                                }
                              },
                              "id": 3457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3316:42:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 3452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3299:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3451,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3299:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3299:67:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3276:90:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3460,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3450,
                            "src": "3378:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3461,
                            "name": "erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3316,
                            "src": "3394:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3378:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3472,
                        "nodeType": "IfStatement",
                        "src": "3374:101:15",
                        "trueBody": {
                          "id": 3471,
                          "nodeType": "Block",
                          "src": "3408:67:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 3465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3463,
                                  "name": "allVaultTargetIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3426,
                                  "src": "3418:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3464,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3433,
                                  "src": "3440:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3418:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3466,
                              "nodeType": "ExpressionStatement",
                              "src": "3418:23:15"
                            },
                            {
                              "expression": {
                                "id": 3469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3467,
                                  "name": "hasVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3347,
                                  "src": "3451:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3462:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3451:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3470,
                              "nodeType": "ExpressionStatement",
                              "src": "3451:15:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3436,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3433,
                      "src": "3197:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3437,
                        "name": "allVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3149,
                        "src": "3201:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3201:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3197:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3474,
                  "initializationExpression": {
                    "assignments": [
                      3433
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3433,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3474,
                        "src": "3182:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3432,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3182:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3435,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3194:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3182:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3219:3:15",
                      "subExpression": {
                        "id": 3440,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3433,
                        "src": "3219:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3442,
                    "nodeType": "ExpressionStatement",
                    "src": "3219:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "3177:304:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3475,
                      "name": "hasVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3347,
                      "src": "3490:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 3476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3502:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3490:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3495,
                  "nodeType": "IfStatement",
                  "src": "3486:116:15",
                  "trueBody": {
                    "id": 3494,
                    "nodeType": "Block",
                    "src": "3508:94:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 3487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3478,
                              "name": "allVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3149,
                              "src": "3516:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3480,
                            "indexExpression": {
                              "id": 3479,
                              "name": "targetIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3344,
                              "src": "3526:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3516:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 3481,
                              "name": "allVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3149,
                              "src": "3541:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3486,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3482,
                                  "name": "allVaults",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3149,
                                  "src": "3551:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3551:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3570:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3551:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3541:31:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3516:56:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3488,
                        "nodeType": "ExpressionStatement",
                        "src": "3516:56:15"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3489,
                              "name": "allVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3149,
                              "src": "3580:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3580:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3580:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3493,
                        "nodeType": "ExpressionStatement",
                        "src": "3580:15:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3314,
              "nodeType": "StructuredDocumentation",
              "src": "2210:117:15",
              "text": " @dev Remove vault from registry, \n Requirements:\n must be and admin and vault must exist"
            },
            "functionSelector": "fab2343f",
            "id": 3497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3316,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 3497,
                  "src": "2352:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2351:22:15"
            },
            "returnParameters": {
              "id": 3318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2381:0:15"
            },
            "scope": 3498,
            "src": "2330:1276:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3499,
        "src": "236:3372:15"
      }
    ],
    "src": "32:3577:15"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/TokenVaultFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        306
      ],
      "Context": [
        1050
      ],
      "ERC165": [
        1277
      ],
      "ERC20": [
        925
      ],
      "IAccessControl": [
        379
      ],
      "IERC165": [
        1289
      ],
      "IERC20": [
        1003
      ],
      "IERC20Metadata": [
        1028
      ],
      "Strings": [
        1253
      ],
      "TokenVault": [
        3133
      ],
      "TokenVaultFactory": [
        3498
      ]
    },
    "id": 3499,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:15"
      },
      {
        "absolutePath": "project:/contracts/TokenVault.sol",
        "file": "./TokenVault.sol",
        "id": 3136,
        "nodeType": "ImportDirective",
        "scope": 3499,
        "sourceUnit": 3134,
        "src": "57:26:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3137,
        "nodeType": "ImportDirective",
        "scope": 3499,
        "sourceUnit": 926,
        "src": "84:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 3138,
        "nodeType": "ImportDirective",
        "scope": 3499,
        "sourceUnit": 307,
        "src": "140:58:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3140,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 306,
              "src": "266:13:15"
            },
            "id": 3141,
            "nodeType": "InheritanceSpecifier",
            "src": "266:13:15"
          }
        ],
        "contractDependencies": [
          306,
          379,
          1050,
          1277,
          1289,
          3133
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3139,
          "nodeType": "StructuredDocumentation",
          "src": "200:35:15",
          "text": " @title TokenVaultFactory"
        },
        "fullyImplemented": true,
        "id": 3498,
        "linearizedBaseContracts": [
          3498,
          306,
          1277,
          1289,
          379,
          1050
        ],
        "name": "TokenVaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9fa19215",
            "id": 3146,
            "mutability": "mutable",
            "name": "vaultLookup",
            "nodeType": "VariableDeclaration",
            "scope": 3498,
            "src": "284:48:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 3145,
              "keyType": {
                "id": 3142,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "292:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "284:29:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 3143,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "303:7:15",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 3144,
                "nodeType": "ArrayTypeName",
                "src": "303:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3149,
            "mutability": "mutable",
            "name": "allVaults",
            "nodeType": "VariableDeclaration",
            "scope": 3498,
            "src": "336:19:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3147,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "336:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3148,
              "nodeType": "ArrayTypeName",
              "src": "336:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3151,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 3498,
            "src": "359:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3150,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "359:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "2a0acc6a",
            "id": 3156,
            "mutability": "constant",
            "name": "ADMIN",
            "nodeType": "VariableDeclaration",
            "scope": 3498,
            "src": "384:50:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3152,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "384:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e",
                  "id": 3154,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "426:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                    "typeString": "literal_string \"ADMIN\""
                  },
                  "value": "ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                    "typeString": "literal_string \"ADMIN\""
                  }
                ],
                "id": 3153,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "416:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3155,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "416:18:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3177,
              "nodeType": "Block",
              "src": "558:111:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3161,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "575:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 3162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "595:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "595:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3160,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "564:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3165,
                  "nodeType": "ExpressionStatement",
                  "src": "564:42:15"
                },
                {
                  "expression": {
                    "id": 3169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3166,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3151,
                      "src": "612:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3167,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "620:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "620:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "612:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3170,
                  "nodeType": "ExpressionStatement",
                  "src": "612:18:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3172,
                        "name": "ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3156,
                        "src": "646:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 3173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "653:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "653:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3171,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "636:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "636:28:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3176,
                  "nodeType": "ExpressionStatement",
                  "src": "636:28:15"
                }
              ]
            },
            "documentation": {
              "id": 3157,
              "nodeType": "StructuredDocumentation",
              "src": "439:102:15",
              "text": " @dev Constructor, provide Admin role to contract deployer\n Requirements:"
            },
            "id": 3178,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:2:15"
            },
            "returnParameters": {
              "id": 3159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:15"
            },
            "scope": 3498,
            "src": "544:125:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3191,
              "nodeType": "Block",
              "src": "873:35:15",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3187,
                      "name": "vaultLookup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3146,
                      "src": "886:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 3189,
                    "indexExpression": {
                      "id": 3188,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3181,
                      "src": "898:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "886:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3186,
                  "id": 3190,
                  "nodeType": "Return",
                  "src": "879:24:15"
                }
              ]
            },
            "documentation": {
              "id": 3179,
              "nodeType": "StructuredDocumentation",
              "src": "673:104:15",
              "text": " @dev Given a wallet address, what are the associated vaults\n Requirements:"
            },
            "functionSelector": "a07213e9",
            "id": 3192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultsByUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3181,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 3192,
                  "src": "806:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "805:14:15"
            },
            "returnParameters": {
              "id": 3186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3185,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3192,
                  "src": "853:16:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3183,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "853:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3184,
                    "nodeType": "ArrayTypeName",
                    "src": "853:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "852:18:15"
            },
            "scope": 3498,
            "src": "781:127:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3201,
              "nodeType": "Block",
              "src": "1056:27:15",
              "statements": [
                {
                  "expression": {
                    "id": 3199,
                    "name": "allVaults",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3149,
                    "src": "1069:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3198,
                  "id": 3200,
                  "nodeType": "Return",
                  "src": "1062:16:15"
                }
              ]
            },
            "documentation": {
              "id": 3193,
              "nodeType": "StructuredDocumentation",
              "src": "912:78:15",
              "text": " @dev Get a list of all the vaults\n Requirements:"
            },
            "functionSelector": "97331bf9",
            "id": 3202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllVaults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:2:15"
            },
            "returnParameters": {
              "id": 3198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3197,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3202,
                  "src": "1038:16:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3195,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1038:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3196,
                    "nodeType": "ArrayTypeName",
                    "src": "1038:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:18:15"
            },
            "scope": 3498,
            "src": "993:90:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3255,
              "nodeType": "Block",
              "src": "1346:324:15",
              "statements": [
                {
                  "body": {
                    "id": 3251,
                    "nodeType": "Block",
                    "src": "1414:234:15",
                    "statements": [
                      {
                        "assignments": [
                          3226
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3226,
                            "mutability": "mutable",
                            "name": "vaultAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3251,
                            "src": "1422:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3225,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1422:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3232,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3227,
                              "name": "vaultLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3146,
                              "src": "1445:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 3229,
                            "indexExpression": {
                              "id": 3228,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3207,
                              "src": "1457:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1445:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3231,
                          "indexExpression": {
                            "id": 3230,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3213,
                            "src": "1470:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1445:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1422:50:15"
                      },
                      {
                        "assignments": [
                          3234
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3234,
                            "mutability": "mutable",
                            "name": "tokenAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3251,
                            "src": "1480:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3233,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1480:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3243,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3238,
                                      "name": "vaultAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3226,
                                      "src": "1531:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3237,
                                    "name": "TokenVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3133,
                                    "src": "1520:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TokenVault_$3133_$",
                                      "typeString": "type(contract TokenVault)"
                                    }
                                  },
                                  "id": 3239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1520:24:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenVault_$3133",
                                    "typeString": "contract TokenVault"
                                  }
                                },
                                "id": 3240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getERC20Address",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2543,
                                "src": "1520:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$925_$",
                                  "typeString": "function () view external returns (contract ERC20)"
                                }
                              },
                              "id": 3241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1520:42:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 3236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1503:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1503:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:67:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1480:90:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3244,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3234,
                            "src": "1582:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3245,
                            "name": "erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3205,
                            "src": "1598:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1582:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3250,
                        "nodeType": "IfStatement",
                        "src": "1578:64:15",
                        "trueBody": {
                          "id": 3249,
                          "nodeType": "Block",
                          "src": "1612:30:15",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 3247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1629:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 3211,
                              "id": 3248,
                              "nodeType": "Return",
                              "src": "1622:11:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3216,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3213,
                      "src": "1372:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3217,
                          "name": "vaultLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3146,
                          "src": "1376:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 3219,
                        "indexExpression": {
                          "id": 3218,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3207,
                          "src": "1388:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1376:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1376:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1372:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3252,
                  "initializationExpression": {
                    "assignments": [
                      3213
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3213,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3252,
                        "src": "1357:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3215,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1369:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1357:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1409:3:15",
                      "subExpression": {
                        "id": 3222,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3213,
                        "src": "1409:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3224,
                    "nodeType": "ExpressionStatement",
                    "src": "1409:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "1352:296:15"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1660:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 3211,
                  "id": 3254,
                  "nodeType": "Return",
                  "src": "1653:12:15"
                }
              ]
            },
            "documentation": {
              "id": 3203,
              "nodeType": "StructuredDocumentation",
              "src": "1087:151:15",
              "text": " @dev Check if the user address already has a vault with the same token\n TODO: check for expired vaults\n Requirements:"
            },
            "functionSelector": "2d1ed26a",
            "id": 3256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3205,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "1262:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3207,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "1284:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:43:15"
            },
            "returnParameters": {
              "id": 3211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3210,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3256,
                  "src": "1338:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3209,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1337:6:15"
            },
            "scope": 3498,
            "src": "1241:429:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3312,
              "nodeType": "Block",
              "src": "1931:275:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3270,
                              "name": "newToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3259,
                              "src": "1957:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1967:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1967:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3269,
                            "name": "vaultExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3256,
                            "src": "1945:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 3273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1945:33:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1982:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1945:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1937:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:51:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3277,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:51:15"
                },
                {
                  "expression": {
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3278,
                      "name": "contractCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3265,
                      "src": "1994:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3279,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2012:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2012:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1994:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3282,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:28:15"
                },
                {
                  "assignments": [
                    3284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3284,
                      "mutability": "mutable",
                      "name": "tVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 3312,
                      "src": "2028:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3283,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2028:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3297,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3290,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3259,
                            "src": "2075:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3291,
                            "name": "maturity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3261,
                            "src": "2085:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3292,
                            "name": "yield",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3263,
                            "src": "2095:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3293,
                            "name": "contractCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3265,
                            "src": "2102:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3294,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3151,
                            "src": "2119:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2060:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_contract$_TokenVault_$3133_$",
                            "typeString": "function (address,uint256,uint256,address,address) returns (contract TokenVault)"
                          },
                          "typeName": {
                            "id": 3288,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3287,
                              "name": "TokenVault",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3133,
                              "src": "2064:10:15"
                            },
                            "referencedDeclaration": 3133,
                            "src": "2064:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenVault_$3133",
                              "typeString": "contract TokenVault"
                            }
                          }
                        },
                        "id": 3295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2060:65:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenVault_$3133",
                          "typeString": "contract TokenVault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenVault_$3133",
                          "typeString": "contract TokenVault"
                        }
                      ],
                      "id": 3286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2045:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3285,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2045:7:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:86:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2028:103:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3303,
                        "name": "tVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "2166:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 3298,
                          "name": "vaultLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3146,
                          "src": "2137:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 3301,
                        "indexExpression": {
                          "expression": {
                            "id": 3299,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2149:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2149:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2137:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2137:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3305,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:36:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3309,
                        "name": "tVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "2194:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3306,
                        "name": "allVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3149,
                        "src": "2179:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2179:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:22:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3311,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:22:15"
                }
              ]
            },
            "documentation": {
              "id": 3257,
              "nodeType": "StructuredDocumentation",
              "src": "1674:130:15",
              "text": " @dev Create a new vault and store it in the registry\n Requirements:\n No existing vaults for that user"
            },
            "functionSelector": "2d5fd62e",
            "id": 3313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3259,
                  "mutability": "mutable",
                  "name": "newToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3313,
                  "src": "1833:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3261,
                  "mutability": "mutable",
                  "name": "maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 3313,
                  "src": "1855:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "yield",
                  "nodeType": "VariableDeclaration",
                  "scope": 3313,
                  "src": "1877:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3265,
                  "mutability": "mutable",
                  "name": "contractCreator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3313,
                  "src": "1896:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:96:15"
            },
            "returnParameters": {
              "id": 3267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1931:0:15"
            },
            "scope": 3498,
            "src": "1807:399:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3496,
              "nodeType": "Block",
              "src": "2381:1225:15",
              "statements": [
                {
                  "assignments": [
                    3320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3320,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3496,
                      "src": "2387:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3319,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2387:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3323,
                  "initialValue": {
                    "expression": {
                      "id": 3321,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2409:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2409:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2387:32:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3326,
                            "name": "ADMIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3156,
                            "src": "2441:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 3327,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2448:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2448:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3325,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "2433:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2433:26:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612061646d696e",
                        "id": 3330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2461:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da305ab119e44f345961db91c223a80ea959d57a8a57e55a8a580dde4b0130f0",
                          "typeString": "literal_string \"Not a admin\""
                        },
                        "value": "Not a admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da305ab119e44f345961db91c223a80ea959d57a8a57e55a8a580dde4b0130f0",
                          "typeString": "literal_string \"Not a admin\""
                        }
                      ],
                      "id": 3324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2425:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2425:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3332,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3335,
                              "name": "erc20Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3316,
                              "src": "2502:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3336,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2516:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2516:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3334,
                            "name": "vaultExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3256,
                            "src": "2490:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 3338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2490:37:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 3339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2531:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2490:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2482:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2482:54:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3342,
                  "nodeType": "ExpressionStatement",
                  "src": "2482:54:15"
                },
                {
                  "assignments": [
                    3344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3344,
                      "mutability": "mutable",
                      "name": "targetIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3496,
                      "src": "2542:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3343,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2542:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3345,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2542:19:15"
                },
                {
                  "assignments": [
                    3347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3347,
                      "mutability": "mutable",
                      "name": "hasVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 3496,
                      "src": "2567:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3346,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2567:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3349,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 3348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2583:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2567:21:15"
                },
                {
                  "body": {
                    "id": 3395,
                    "nodeType": "Block",
                    "src": "2656:263:15",
                    "statements": [
                      {
                        "assignments": [
                          3364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3364,
                            "mutability": "mutable",
                            "name": "vaultAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3395,
                            "src": "2664:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2664:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3370,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3365,
                              "name": "vaultLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3146,
                              "src": "2687:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 3367,
                            "indexExpression": {
                              "id": 3366,
                              "name": "userAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3320,
                              "src": "2699:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2687:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3369,
                          "indexExpression": {
                            "id": 3368,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3351,
                            "src": "2712:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2687:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2664:50:15"
                      },
                      {
                        "assignments": [
                          3372
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3372,
                            "mutability": "mutable",
                            "name": "tokenAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3395,
                            "src": "2722:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3371,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2722:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3381,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3376,
                                      "name": "vaultAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3364,
                                      "src": "2773:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3375,
                                    "name": "TokenVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3133,
                                    "src": "2762:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TokenVault_$3133_$",
                                      "typeString": "type(contract TokenVault)"
                                    }
                                  },
                                  "id": 3377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2762:24:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenVault_$3133",
                                    "typeString": "contract TokenVault"
                                  }
                                },
                                "id": 3378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getERC20Address",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2543,
                                "src": "2762:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$925_$",
                                  "typeString": "function () view external returns (contract ERC20)"
                                }
                              },
                              "id": 3379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2762:42:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 3374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2745:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3373,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2745:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2745:67:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2722:90:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3382,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3372,
                            "src": "2824:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3383,
                            "name": "erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3316,
                            "src": "2840:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2824:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3394,
                        "nodeType": "IfStatement",
                        "src": "2820:93:15",
                        "trueBody": {
                          "id": 3393,
                          "nodeType": "Block",
                          "src": "2854:59:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 3387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3385,
                                  "name": "targetIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3344,
                                  "src": "2864:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3386,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3351,
                                  "src": "2878:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2864:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3388,
                              "nodeType": "ExpressionStatement",
                              "src": "2864:15:15"
                            },
                            {
                              "expression": {
                                "id": 3391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3389,
                                  "name": "hasVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3347,
                                  "src": "2889:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2900:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2889:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3392,
                              "nodeType": "ExpressionStatement",
                              "src": "2889:15:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3354,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3351,
                      "src": "2614:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3355,
                          "name": "vaultLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3146,
                          "src": "2618:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 3357,
                        "indexExpression": {
                          "id": 3356,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3320,
                          "src": "2630:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2618:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2618:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2614:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3396,
                  "initializationExpression": {
                    "assignments": [
                      3351
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3351,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3396,
                        "src": "2599:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2599:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3353,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2611:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2599:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2651:3:15",
                      "subExpression": {
                        "id": 3360,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3351,
                        "src": "2651:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3362,
                    "nodeType": "ExpressionStatement",
                    "src": "2651:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "2594:325:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3397,
                      "name": "hasVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3347,
                      "src": "2928:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 3398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2940:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2928:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3424,
                  "nodeType": "IfStatement",
                  "src": "2924:192:15",
                  "trueBody": {
                    "id": 3423,
                    "nodeType": "Block",
                    "src": "2946:170:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 3415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3400,
                                "name": "vaultLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3146,
                                "src": "2954:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 3403,
                              "indexExpression": {
                                "id": 3401,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3320,
                                "src": "2966:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3404,
                            "indexExpression": {
                              "id": 3402,
                              "name": "targetIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3344,
                              "src": "2979:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2954:37:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3405,
                                "name": "vaultLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3146,
                                "src": "2994:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 3407,
                              "indexExpression": {
                                "id": 3406,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3320,
                                "src": "3006:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2994:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3414,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3408,
                                    "name": "vaultLookup",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3146,
                                    "src": "3028:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                      "typeString": "mapping(address => address[] storage ref)"
                                    }
                                  },
                                  "id": 3410,
                                  "indexExpression": {
                                    "id": 3409,
                                    "name": "userAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3320,
                                    "src": "3040:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3028:24:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3028:31:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3062:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3028:35:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2994:77:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2954:117:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3416,
                        "nodeType": "ExpressionStatement",
                        "src": "2954:117:15"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 3417,
                                "name": "vaultLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3146,
                                "src": "3079:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 3419,
                              "indexExpression": {
                                "id": 3418,
                                "name": "userAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3320,
                                "src": "3091:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3079:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3079:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3079:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3422,
                        "nodeType": "ExpressionStatement",
                        "src": "3079:30:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3426,
                      "mutability": "mutable",
                      "name": "allVaultTargetIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3496,
                      "src": "3122:27:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3122:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3427,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3122:27:15"
                },
                {
                  "expression": {
                    "id": 3430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3428,
                      "name": "hasVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3347,
                      "src": "3155:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3166:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3155:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3431,
                  "nodeType": "ExpressionStatement",
                  "src": "3155:16:15"
                },
                {
                  "body": {
                    "id": 3473,
                    "nodeType": "Block",
                    "src": "3224:257:15",
                    "statements": [
                      {
                        "assignments": [
                          3444
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3444,
                            "mutability": "mutable",
                            "name": "vaultAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3473,
                            "src": "3232:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3232:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3448,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3445,
                            "name": "allVaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3149,
                            "src": "3255:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3447,
                          "indexExpression": {
                            "id": 3446,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3433,
                            "src": "3265:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3255:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3232:35:15"
                      },
                      {
                        "assignments": [
                          3450
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3450,
                            "mutability": "mutable",
                            "name": "tokenAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 3473,
                            "src": "3276:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3449,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3276:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3459,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3454,
                                      "name": "vaultAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3444,
                                      "src": "3327:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3453,
                                    "name": "TokenVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3133,
                                    "src": "3316:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TokenVault_$3133_$",
                                      "typeString": "type(contract TokenVault)"
                                    }
                                  },
                                  "id": 3455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3316:24:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenVault_$3133",
                                    "typeString": "contract TokenVault"
                                  }
                                },
                                "id": 3456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getERC20Address",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2543,
                                "src": "3316:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$925_$",
                                  "typeString": "function () view external returns (contract ERC20)"
                                }
                              },
                              "id": 3457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3316:42:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$925",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 3452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3299:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3451,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3299:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3299:67:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3276:90:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3460,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3450,
                            "src": "3378:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3461,
                            "name": "erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3316,
                            "src": "3394:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3378:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3472,
                        "nodeType": "IfStatement",
                        "src": "3374:101:15",
                        "trueBody": {
                          "id": 3471,
                          "nodeType": "Block",
                          "src": "3408:67:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 3465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3463,
                                  "name": "allVaultTargetIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3426,
                                  "src": "3418:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3464,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3433,
                                  "src": "3440:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3418:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3466,
                              "nodeType": "ExpressionStatement",
                              "src": "3418:23:15"
                            },
                            {
                              "expression": {
                                "id": 3469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3467,
                                  "name": "hasVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3347,
                                  "src": "3451:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3462:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3451:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3470,
                              "nodeType": "ExpressionStatement",
                              "src": "3451:15:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3436,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3433,
                      "src": "3197:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3437,
                        "name": "allVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3149,
                        "src": "3201:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3201:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3197:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3474,
                  "initializationExpression": {
                    "assignments": [
                      3433
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3433,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 3474,
                        "src": "3182:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3432,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3182:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3435,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3194:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3182:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3219:3:15",
                      "subExpression": {
                        "id": 3440,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3433,
                        "src": "3219:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3442,
                    "nodeType": "ExpressionStatement",
                    "src": "3219:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "3177:304:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3475,
                      "name": "hasVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3347,
                      "src": "3490:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 3476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3502:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3490:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3495,
                  "nodeType": "IfStatement",
                  "src": "3486:116:15",
                  "trueBody": {
                    "id": 3494,
                    "nodeType": "Block",
                    "src": "3508:94:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 3487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3478,
                              "name": "allVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3149,
                              "src": "3516:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3480,
                            "indexExpression": {
                              "id": 3479,
                              "name": "targetIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3344,
                              "src": "3526:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3516:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 3481,
                              "name": "allVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3149,
                              "src": "3541:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3486,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3482,
                                  "name": "allVaults",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3149,
                                  "src": "3551:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3551:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3570:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3551:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3541:31:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3516:56:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3488,
                        "nodeType": "ExpressionStatement",
                        "src": "3516:56:15"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3489,
                              "name": "allVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3149,
                              "src": "3580:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "3580:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3580:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3493,
                        "nodeType": "ExpressionStatement",
                        "src": "3580:15:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3314,
              "nodeType": "StructuredDocumentation",
              "src": "2210:117:15",
              "text": " @dev Remove vault from registry, \n Requirements:\n must be and admin and vault must exist"
            },
            "functionSelector": "fab2343f",
            "id": 3497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3316,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 3497,
                  "src": "2352:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2351:22:15"
            },
            "returnParameters": {
              "id": 3318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2381:0:15"
            },
            "scope": 3498,
            "src": "2330:1276:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3499,
        "src": "236:3372:15"
      }
    ],
    "src": "32:3577:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xe1E68256d992952dD9032e60D51f7c7B54C378a6",
      "transactionHash": "0xb211039f3d19cbf5309fb51cda0f4c22843406bf13e09f9c343fd673f76e976c"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x597511634767f05c617E77396c13A4959C7a880C",
      "transactionHash": "0xe6c3dce2d1032d27e102f5d4b8a1fe228877a6c52e9f76dbb038eea727035b1b"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-07T14:18:32.492Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor, provide Admin role to contract deployer Requirements:"
      },
      "createVault(address,uint256,uint256,address)": {
        "details": "Create a new vault and store it in the registry Requirements: No existing vaults for that user"
      },
      "destroyVault(address)": {
        "details": "Remove vault from registry,  Requirements: must be and admin and vault must exist"
      },
      "getAllVaults()": {
        "details": "Get a list of all the vaults Requirements:"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getVaultsByUser(address)": {
        "details": "Given a wallet address, what are the associated vaults Requirements:"
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "vaultExists(address,address)": {
        "details": "Check if the user address already has a vault with the same token TODO: check for expired vaults Requirements:"
      }
    },
    "title": "TokenVaultFactory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}